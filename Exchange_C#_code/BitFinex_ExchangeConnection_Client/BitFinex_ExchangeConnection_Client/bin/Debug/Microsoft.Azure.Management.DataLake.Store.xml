<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.DataLake.Store</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.AccountOperations">
            <summary>
            AccountOperations operations.
            </summary>
            <summary>
            AccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.FirewallRuleExistsWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Tests the existence of the specified Data Lake Store firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to test the firewall
            rule's existence.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to test for existence.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.ExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Tests whether the specified Data Lake Store account exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to test existence of.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.#ctor(Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient)">
            <summary>
            Initializes a new instance of the AccountOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.AccountOperations.Client">
            <summary>
            Gets a reference to the DataLakeStoreAccountManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to retrieve.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.EnableKeyVaultWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Attempts to enable a user managed Key Vault for encryption of the specified
            Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to attempt to enable the Key Vault
            for.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource group. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account(s).
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just those
            requested, e.g. Categories?$select=CategoryName,Description. Optional.
            </param>
            <param name='count'>
            A Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The response
            includes a link to the next page of results, if any.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just those
            requested, e.g. Categories?$select=CategoryName,Description. Optional.
            </param>
            <param name='count'>
            The Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource group. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The response
            includes a link to the next page of results, if any.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions">
            <summary>
            Extension methods for AccountOperations.
            </summary>
            <summary>
            Extension methods for AccountOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.FirewallRuleExists(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.String)">
            <summary>
            Gets the specified Data Lake Store firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.FirewallRuleExistsAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to retrieve.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.Exists(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String)">
            <summary>
            Gets the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ExistsAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to retrieve.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount,System.Threading.CancellationToken)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.Update(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.Get(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String)">
            <summary>
            Gets the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.GetAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to retrieve.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.EnableKeyVault(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String)">
            <summary>
            Attempts to enable a user managed Key Vault for encryption of the specified
            Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to attempt to enable the Key Vault
            for.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.EnableKeyVaultAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to enable a user managed Key Vault for encryption of the specified
            Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to attempt to enable the Key Vault
            for.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean})">
            <summary>
            Lists the Data Lake Store accounts within a specific resource group. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account(s).
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just those
            requested, e.g. Categories?$select=CategoryName,Description. Optional.
            </param>
            <param name='count'>
            A Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource group. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account(s).
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just those
            requested, e.g. Categories?$select=CategoryName,Description. Optional.
            </param>
            <param name='count'>
            A Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.List(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean})">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The response
            includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just those
            requested, e.g. Categories?$select=CategoryName,Description. Optional.
            </param>
            <param name='count'>
            The Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The response
            includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just those
            requested, e.g. Categories?$select=CategoryName,Description. Optional.
            </param>
            <param name='count'>
            The Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.BeginCreate(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount,System.Threading.CancellationToken)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.BeginDelete(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource group. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource group. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListNext(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The response
            includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.AccountOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.DataLake.Store.IAccountOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The response
            includes a link to the next page of results, if any.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient">
            <summary>
            Creates a Data Lake Store account management client.
            </summary>
            <summary>
            Creates an Azure Data Lake Store account management client.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.String,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='userAgentAssemblyVersion'>
            Optional. The version string that should be sent in the user-agent header for all requests. The default is the current version of the SDK.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.String,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='userAgentAssemblyVersion'>
            Optional. The version string that should be sent in the user-agent header for all requests. The default is the current version of the SDK.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.String,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='userAgentAssemblyVersion'>
            Optional. The version string that should be sent in the user-agent header for all requests. The default is the current version of the SDK.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.String,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='userAgentAssemblyVersion'>
            Optional. The version string that should be sent in the user-agent header for all requests. The default is the current version of the SDK.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify Microsoft Azure
            subscription. The subscription ID forms part of the URI for every service
            call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.FirewallRules">
            <summary>
            Gets the IFirewallRulesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.TrustedIdProviders">
            <summary>
            Gets the ITrustedIdProvidersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.Account">
            <summary>
            Gets the IAccountOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreAccountManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreCustomizationHelper.PackageVersion">
            <summary>
            This constant is used as the default package version to place in the user agent.
            It should mirror the package version in the project.json file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreCustomizationHelper.UpdateUserAgentAssemblyVersion(Microsoft.Rest.Azure.IAzureClient,System.String)">
            <summary>
            Get the assembly version of a service client.
            </summary>
            <returns>The assembly version of the client.</returns>        
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient">
            <summary>
            Creates a Data Lake Store filesystem management client.
            </summary>
            <summary>
            Creates an Azure Data Lake Store filesystem client.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.String,System.String,System.Int32,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreFileSystemManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='userAgentAssemblyVersion'>
            Optional. The version string that should be sent in the user-agent header for all requests. The default is the current version of the SDK.
            </param>
            <param name='adlsFileSystemDnsSuffix'>
            Optional. The dns suffix to use for all requests for this client instance. The default is 'azuredatalakestore.net'.
            </param>
            <param name='clientTimeoutInMinutes'>
            Optional. The maximum amount of time the client will wait for the server to respond to a request. The default is five minutes.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.String,System.String,System.Int32,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreFileSystemManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='userAgentAssemblyVersion'>
            Optional. The version string that should be sent in the user-agent header for all requests. The default is the current version of the SDK.
            </param>
            <param name='adlsFileSystemDnsSuffix'>
            Optional. The dns suffix to use for all requests for this client instance. The default is 'azuredatalakestore.net'.
            </param>
            <param name='clientTimeoutInMinutes'>
            Optional. The maximum amount of time the client will wait for the server to respond to a request. The default is five minutes.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.AdlsFileSystemDnsSuffix">
            <summary>
            Gets the URI used as the base for all cloud service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.FileSystem">
            <summary>
            Gets the IFileSystemOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreFileSystemManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreFileSystemManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreFileSystemManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DataLakeStoreFileSystemManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter">
            <summary>
            A front end adapter that communicates with the DataLake Store.
            This is a syncrhonous call adapter, which has certain efficiency limitations.
            In the future, new adapters that are created should consider implementing the methods
            asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter"/> class.
            </summary>
            <param name="accountName">Name of the account.</param>
            <param name="client">The client.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.#ctor(System.String,Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter"/> class.
            </summary>
            <param name="accountName">Name of the account.</param>
            <param name="client">The client.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)">
            <summary>
            Creates a new, empty stream at the given path.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="overwrite">Whether to overwrite an existing stream.</param>
            <param name="data">The data.</param>
            <param name="byteCount">The byte count.</param>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.DeleteStream(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes an existing stream at the given path.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="recurse">if set to <c>true</c> [recurse]. This is used for folder streams only.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will delete a stream on the local machine instead of on the server.</param>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)">
            <summary>
            Appends to stream.
            </summary>
            <param name="streamPath">The stream path.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="byteCount">The byte count.</param>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.StreamExists(System.String,System.Boolean)">
            <summary>
            Determines if the stream with given path exists.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will test if the stream exists on the local machine instead of on the server.</param>
            <returns>
            True if the stream exists, false otherwise.
            </returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.GetStreamLength(System.String,System.Boolean)">
            <summary>
            Gets a value indicating the length of a stream, in bytes.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will get the stream length on the local machine instead of on the server.</param>
            <returns>
            The length of the stream, in bytes.
            </returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.IsDirectory(System.String)">
            <summary>
            Determines if the stream with given path on the server is a directory or a terminating file.
            This is used exclusively for download.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <returns>
            True if the stream is a directory, false otherwise.
            </returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.ListDirectory(System.String,System.Boolean)">
            <summary>
            Lists the Data Lake Store directory specified.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
            <returns>
            The list of string paths and their corresponding file sizes, in bytes.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFrontEndAdapter.Concatenate(System.String,System.String[],System.Boolean)">
            <summary>
            Concatenates the given input streams (in order) into the given target stream.
            At the end of this operation, input streams will be deleted.
            </summary>
            <param name="targetStreamPath">The relative path to the target stream.</param>
            <param name="inputStreamPaths">An ordered array of paths to the input streams.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will concatenate the streams on the local machine instead of on the server.</param>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter">
            <summary>
            Defines operations that the DataLakeTransferClient needs from the FrontEnd in order to operate
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.CreateStream(System.String,System.Boolean,System.Byte[],System.Int32)">
            <summary>
            Creates a new, empty stream at the given path.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="overwrite">Whether to overwrite an existing stream.</param>
            <param name="data">The data.</param>
            <param name="byteCount">The byte count.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.DeleteStream(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes an existing stream at the given path.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="recurse">if set to <c>true</c> [recurse]. This is used for folder streams only.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will delete a stream on the local machine instead of on the server.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.AppendToStream(System.String,System.Byte[],System.Int64,System.Int32)">
            <summary>
            Appends the given byte array to the end of a given stream.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="data">An array of bytes to be appended to the stream.</param>
            <param name="offset">The offset at which to append to the stream.</param>
            <param name="length">The number of bytes to append (starting at 0).</param>
            <exception cref="T:System.ArgumentNullException">If the data to be appended is null or empty.</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.ReadStream(System.String,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Opens a stream for reading given the speficied stream path
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="offset">The offset at which to append to the stream.</param>
            <param name="length">The number of bytes to append (starting at 0).</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will open a stream on the server to read from, instead of the local machine.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">If the data to be appended is null or empty.</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.StreamExists(System.String,System.Boolean)">
            <summary>
            Determines if the stream with given path exists.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will test if the stream exists on the local machine instead of on the server.</param>
            <returns>True if the stream exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.IsDirectory(System.String)">
            <summary>
            Determines if the stream with given path on the server is a directory or a terminating file.
            This is used exclusively for download.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <returns>True if the stream is a directory, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.ListDirectory(System.String,System.Boolean)">
            <summary>
            Lists the Data Lake Store directory specified.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
            <returns>
            The list of string paths and their corresponding file sizes, in bytes.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.GetStreamLength(System.String,System.Boolean)">
            <summary>
            Gets a value indicating the length of a stream, in bytes.
            </summary>
            <param name="streamPath">The relative path to the stream.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will get the stream length on the local machine instead of on the server.</param>
            <returns>The length of the stream, in bytes.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter.Concatenate(System.String,System.String[],System.Boolean)">
            <summary>
            Concatenates the given input streams (in order) into the given target stream.
            At the end of this operation, input streams will be deleted.
            </summary>
            <param name="targetStreamPath">The relative path to the target stream.</param>
            <param name="inputStreamPaths">An ordered array of paths to the input streams.</param>
            <param name="isDownload">if set to <c>true</c> [is download], meaning we will concatenate the streams on the local machine instead of on the server.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            <summary>
            Represents an exception that is thrown when the local metadata is invalid or inconsistent.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress">
            <summary>
            Represents a class used for reporting transfer progress on a segment.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress.#ctor(System.Int32,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Creates a new segment progress report.
            </summary>
            <param name="segmentNumber">The segment number the report refers to.</param>
            <param name="segmentLength">The segment length, in bytes.</param>
            <param name="transferredByteCount">The number of bytes transferred so far.</param>
            <param name="isFailed">Whether the transfer operation failed.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress.SegmentNumber">
            <summary>
            Gets a value indicating the segment number this progress report refers to.
            </summary>
            <value>
            The segment number.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress.Length">
            <summary>
            Gets a value indicating the segment length, in bytes.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress.IsFailed">
            <summary>
            Gets a value indicating whether the transfer failed or not.
            </summary>
            <value>
              <c>true</c> if this instance is failed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress.TransferredByteCount">
            <summary>
            Gets a value indicating the number of bytes transferred so far for this segment.
            </summary>
            <value>
            The transferred byte count.
            </value>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus">
            <summary>
            Defines various states that a segment transfer can have
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Pending">
            <summary>
            Indicates that the segment is currently scheduled for transfer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.InProgress">
            <summary>
            Indicates that the segment is currently being transferred.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Failed">
            <summary>
            Indicates that the segment was not transferred successfully.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus.Complete">
            <summary>
            Indicates that the segment was successfully transferred.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.StringExtensions.FindNewline(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Text.Encoding,System.String)">
            <summary>
            Finds the index in the given buffer of a newline character, either the first or the last (based on the parameters).
            If a combined newline (\r\n), the index returned is that of the last character in the sequence.
            </summary>
            <param name="buffer">The buffer to search in.</param>
            <param name="startOffset">The index of the first byte to start searching at.</param>
            <param name="length">The number of bytes to search, starting from the given startOffset.</param>
            <param name="reverse">If true, searches from the startOffset down to the beginning of the buffer. If false, searches upwards.</param>
            <returns>The index of the closest newline character in the sequence (based on direction) that was found. Returns -1 if not found. </returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.StringExtensions.IsNewline(System.Char,System.String)">
            <summary>
            Determines whether the specified character is newline.
            </summary>
            <param name="c">The character.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            <summary>
            Represents an exception that is thrown when an transfer fails.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata">
            <summary>
            Represents general metadata pertaining to a transfer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.#ctor">
            <summary>
            Required by JsonSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.#ctor(System.String,Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter)">
            <summary>
            Constructs a new TransferFolderMetadata object from the given parameters.
            </summary>
            <param name="metadataFilePath">The file path to assign to this metadata file (for saving purposes).</param>
            <param name="transferParameters">The parameters to use for constructing this metadata.</param>
            <param name="frontend">The frontend to use when generating per file metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.TransferId">
            <summary>
            Gets or sets a value indicating the unique identifier associated with this transfer.
            </summary>
            <value>
            The transfer identifier.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.InputFolderPath">
            <summary>
            Gets or sets a value indicating the full path to the file to be transferred.
            </summary>
            <value>
            The input file path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.TargetStreamFolderPath">
            <summary>
            Gets or sets a value indicating the full stream folder path that will be used as the root folder for all files and folders being transferred.
            </summary>
            <value>
            The target stream path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.FileCount">
            <summary>
            Gets or sets a value indicating the number of files in this transfer.
            </summary>
            <value>
            The segment count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.TotalFileBytes">
            <summary>
            Gets or sets the total bytes for all the files.
            </summary>
            <value>
            The total bytes for all the files.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.IsRecursive">
            <summary>
            Gets a value indicating whether this is recurisve directory transfer or a flat directory transfer
            </summary>
            <value>
              <c>true</c> if this instance is recursive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.Files">
            <summary>
            Gets a pointer to an array of file transfer metadata. This is used for each file that is being transferred.
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.MetadataFilePath">
            <summary>
            Gets a value indicating the path where this metadata file is located.
            </summary>
            <value>
            The metadata file path.
            </value>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.LoadFrom(System.String,System.Int32)">
            <summary>
            Attempts to load an TransferFolderMetadata object from the given file.
            </summary>
            <param name="filePath">The full path to the file where to load the metadata from</param>
            <param name="threadCount">The number of threads to use while populating the metadata. This is determined by the concurrent file count</param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException">Could not find metadata file</exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">Unable to parse metadata file</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.Save">
            <summary>
            Saves the given metadata to its canonical location. This method is thread-safe.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.DeleteFile">
            <summary>
            Deletes the metadata file from disk.
            </summary>
            <exception cref="T:System.InvalidOperationException">Null or empty MetadataFilePath. Cannot delete metadata until this property is set.</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.ValidateConsistency">
            <summary>
            Verifies the given metadata for consistency. Checks include, for each file:
            * Completeness
            * Existence and consistency with local file
            * Segment data consistency
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata.GetByteCountFromFileList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the byte count in the given list of files.
            </summary>
            <param name="fileList">The file list.</param>
            <returns>The total byte count for the file list</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadataGenerator.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter)">
            <summary>
            Creates a new instance of the TransferFolderMetadataGenerator object with the given parameters and the given maximum append length.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="frontend">The frontend used when generating fresh metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadataGenerator.GetExistingMetadata(System.String)">
            <summary>
            Attempts to load the metadata from an existing file in its canonical location.
            </summary>
            <param name="metadataFilePath">The metadata file path.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadataGenerator.CreateNewMetadata(System.String)">
            <summary>
            Creates a new metadata based on the given input parameters, and saves it to its canonical location.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress">
            <summary>
            Reports progress on an transfer for a folder.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress"/> class.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.Populate(Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata)">
            <summary>
            Populates the specified metadata.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.TotalFileLength">
            <summary>
            Gets a value indicating the total length of the file to transfer.
            </summary>
            <value>
            The total length of the file.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.TotalFileCount">
            <summary>
            Gets the total file count.
            </summary>
            <value>
            The total file count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.TransferredByteCount">
            <summary>
            Gets a value indicating the number of bytes that have been transferred so far.
            </summary>
            <value>
            The transferred byte count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.TransferredFileCount">
            <summary>
            Gets the transferred file count.
            </summary>
            <value>
            The transferred file count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.FailedFileCount">
            <summary>
            Gets the count of files that failed.
            </summary>
            <value>
            The failed file count.
            </value>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.GetSegmentProgress(System.Int32)">
            <summary>
            Gets the transfer progress for a particular file.
            </summary>
            <param name="segmentNumber">The sequence number of the file to retrieve information for</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.OnFileTransferThreadAborted(Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Updates the progress to indicate that a file failed
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress.SetSegmentProgress(System.Threading.CancellationToken)">
            <summary>
            Updates the progress while there is still progress to update.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferMetadata">
            <summary>
            Represents general metadata pertaining to an transfer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.#ctor">
            <summary>
            Required by JsonSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.#ctor(System.String,Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Int64)">
            <summary>
            Constructs a new TransferMetadata from the given parameters.
            </summary>
            <param name="metadataFilePath">The file path to assign to this metadata file (for saving purposes).</param>
            <param name="transferParameters">The parameters to use for constructing this metadata.</param>
            <param name="frontEnd">The front end. This is used only in the constructor for determining file length</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.TransferId">
            <summary>
            Gets or sets a value indicating the unique identifier associated with this transfer.
            </summary>
            <value>
            The transfer identifier.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.InputFilePath">
            <summary>
            /Gets or sets a value indicating the full path to the file to be transferred.
            </summary>
            <value>
            The input file path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.FileLength">
            <summary>
            Gets or sets a value indicating the length (in bytes) of the file to be transferred.
            </summary>
            <value>
            The length of the file.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.TargetStreamPath">
            <summary>
            Gets or sets a value indicating the full stream path where the file will be transferred to.
            </summary>
            <value>
            The target stream path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.SegmentStreamDirectory">
            <summary>
            Gets or sets a value indicating the directory path where intermediate segment streams will be stored.
            </summary>
            <value>
            The target stream path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.SegmentCount">
            <summary>
            Gets or sets a value indicating the number of segments this file is split into for purposes of transfering it.
            </summary>
            <value>
            The segment count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.SegmentLength">
            <summary>
            Gets or sets a value indicating the length (in bytes) of each segment of the file (except the last one, which may be less).
            </summary>
            <value>
            The length of the segment.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.Segments">
            <summary>
            Gets a pointer to an array of segment metadata. The segments are ordered by their segment number (sequence).
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.IsBinary">
            <summary>
            Gets a value indicating whether the transfer file should be treated as a binary file or not.
            </summary>
            <value>
              <c>true</c> if this instance is binary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.IsDownload">
            <summary>
            Gets or sets a value indicating whether this instance is a download instead of an transfer.
            </summary>
            <value>
            <c>true</c> if this instance is download; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.EncodingCodePage">
            <summary>
            Gets the CodePage of the current encoding being used.
            </summary>
            <value>
             The CodePage of the current encoding.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.Delimiter">
            <summary>
            Gets a value indicating the record boundary delimiter for the file, if any.
            </summary>
            <value>
            The record boundary delimiter
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.Status">
            <summary>
            Gets or sets a value indicating the current transfer status for this file transfer.
            This value is checked for folder transfer progress and resuming. 
            Single file transfers use segment status for tracking.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.MetadataFilePath">
            <summary>
            Gets a value indicating the path where this metadata file is located.
            </summary>
            <value>
            The metadata file path.
            </value>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.LoadFrom(System.String)">
            <summary>
            Attempts to load an TransferMetadata object from the given file.
            </summary>
            <param name="filePath">The full path to the file where to load the metadata from</param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException">Could not find metadata file</exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">Unable to parse metadata file</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.Save">
            <summary>
            Saves the given metadata to its canonical location. This method is thread-safe.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.DeleteFile">
            <summary>
            Deletes the metadata file from disk.
            </summary>
            <exception cref="T:System.InvalidOperationException">Null or empty MetadataFilePath. Cannot delete metadata until this property is set.</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.ValidateConsistency">
            <summary>
            Verifies the given metadata for consistency. Checks include:
            * Completeness
            * Existence and consistency with local file
            * Segment data consistency
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.SplitTargetStreamPathByName(System.String@)">
            <summary>
            Splits the target stream path, returning the name of the stream and storing the full directory path (if any) in an out variable.
            </summary>
            <param name="targetStreamDirectory">The target stream directory, or null of the stream is at the root.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.AlignSegmentsToRecordBoundaries">
            <summary>
            Aligns segments to match record boundaries (where a record boundary = a new line).
            If not possible (max record size = 4MB), throws an exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.DetermineLengthAdjustment(Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata,System.IO.FileStream,System.Text.Encoding,System.String)">
            <summary>
            Calculates the value by which we'd need to adjust the length of the given segment, by searching for the nearest newline around it (before and after), 
            and returning the distance to it (which can be positive, if after, or negative, if before).
            </summary>
            <param name="segment"></param>
            <param name="stream"></param>
            <param name="encoding"></param>
            <param name="delimiter"></param>
            <returns></returns>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">If no record boundary could be located on either side of the segment end offset within the allowed distance.</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.FindClosestToCenter(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the value (of the given two) that is closest in absolute terms to the center value.
            Values that are negative are ignored (since these are assumed to represent array indices).
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="centerValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadata.ReadIntoBufferAroundReference(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Reads data from the given file into the given buffer, centered around the given file offset. The first half of the buffer will be 
            filled with data right before the given offset, while the remainder of the buffer will contain data right after it (of course, containing the byte at the given offset).
            </summary>
            <param name="stream"></param>
            <param name="buffer"></param>
            <param name="fileReferenceOffset"></param>
            <returns>The number of bytes reads, which could be less than the length of the input buffer if we can't read due to the beginning or the end of the file.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadataGenerator.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter)">
            <summary>
            Creates a new instance of the TransferMetadataGenerator with the given parameters and the given maximum append length.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="frontend">The frontend to use when generating new metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadataGenerator.GetExistingMetadata(System.String)">
            <summary>
            Attempts to load the metadata from an existing file in its canonical location.
            </summary>
            <param name="metadataFilePath">The metadata file path.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferMetadataGenerator.CreateNewMetadata(System.String)">
            <summary>
            Creates a new metadata based on the given input parameters, and saves it to its canonical location.
            </summary>
            <param name="metadataFilePath">The metadata file path.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferParameters">
            <summary>
            Represents parameters for the DataLakeStoreTransferClient.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferParameters.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int64,System.String)">
            <summary>
            Creates a new set of parameters for the DataLakeStoreTransferClient.
            </summary>
            <param name="inputFilePath">The full path to the file or folder to be transferred.</param>
            <param name="targetStreamPath">The full stream path where the file or folder will be transferred to.</param>
            <param name="accountName">Name of the account to transfer to.</param>
            <param name="perFileThreadCount">The per file thread count, indicating the number of file segments to transfer in parallel. This number is capped at FILE_SIZE/maxSegmentLength for optimal performance.</param>
            <param name="concurrentFileCount">The parallel file count, indicating the number of files to transfer in parallel during a folder transfer. This parameter is ignored for single file transfers. Default is 5 for folder transfers</param>
            <param name="isOverwrite">(Optional) Whether to overwrite the target stream or not.</param>
            <param name="isResume">(Optional) Indicates whether to resume a previously interrupted transfer.</param>
            <param name="isBinary">(Optional) Indicates whether to treat the input file as a binary file (true), or whether to align transfer blocks to record boundaries (false).</param>
            <param name="isRecursive">(Optional) Indicates whether to transfer the source folder recursively or not. If true, will transfer the source directory and all sub directories, preserving directory structure.</param>
            <param name="isDownload">(Optional) if set to <c>true</c> [is download] instead of an transfer scenario. Default is false.</param>
            <param name="maxSegmentLength">Maximum length of each segment. The default is 256mb, which gives optimal performance. Modify at your own risk.</param>
            <param name="localMetadataLocation">(Optional) Indicates the directory path where to store the local transfer metadata file while the transfer is in progress. This location must be writeable from this application. Default location: SpecialFolder.LocalApplicationData.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferParameters.#ctor(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int64,System.String)">
            <summary>
            Creates a new set of parameters for the DataLakeStoreTransferClient.
            </summary>
            <param name="inputFilePath">The full path to the file or folder to be transferred.</param>
            <param name="targetStreamPath">The full stream path where the file or folder will be transferred to.</param>
            <param name="accountName">Name of the account to transfer to.</param>
            <param name="useSegmentBlockBackOffRetryStrategy">if set to <c>true</c> [use segment block back off retry strategy].</param>
            <param name="perFileThreadCount">The per file thread count, indicating the number of file segments to transfer in parallel. This number is capped at FILE_SIZE/maxSegmentLength for optimal performance.</param>
            <param name="concurrentFileCount">The parallel file count, indicating the number of files to transfer in parallel during a folder transfer. This parameter is ignored for single file transfers. Default is 5 for folder transfers</param>
            <param name="isOverwrite">(Optional) Whether to overwrite the target stream or not.</param>
            <param name="isResume">(Optional) Indicates whether to resume a previously interrupted transfer.</param>
            <param name="isBinary">(Optional) Indicates whether to treat the input file as a binary file (true), or whether to align transfer blocks to record boundaries (false).</param>
            <param name="isRecursive">(Optional) Indicates whether to transfer the source folder recursively or not. If true, will transfer the source directory and all sub directories, preserving directory structure.</param>
            <param name="isDownload">(Optional) if set to <c>true</c> [is download] instead of an transfer scenario. Default is false.</param>
            <param name="maxSegmentLength">Maximum length of the segment.</param>
            <param name="localMetadataLocation">(Optional) Indicates the directory path where to store the local transfer metadata file while the transfer is in progress. This location must be writeable from this application. Default location: SpecialFolder.LocalApplicationData.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.UseSegmentBlockBackOffRetryStrategy">
            <summary>
            Gets a value indicating whether [to use segment block back off retry strategy].
            </summary>
            <value>
            <c>true</c> if [to use segment block back off retry strategy]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.InputFilePath">
            <summary>
            Gets a value indicating the full path to the file or folder to be transferred.
            </summary>
            <value>
            The input file path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.TargetStreamPath">
            <summary>
            Gets a value indicating the full stream path where the file will be transferred to.
            </summary>
            <value>
            The target stream path.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.AccountName">
            <summary>
            Gets a value indicating the name of the account to transfer to or download from.
            </summary>
            <value>
            The name of the account.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.PerFileThreadCount">
            <summary>
            Gets a value indicating the maximum number of parallel threads to use for a single file transfer or download.
            </summary>
            <value>
            The file thread count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.ConcurrentFileCount">
            <summary>
            Gets the parallel file count, which indicates how many files in a folder will be transferred or downloaded in parallel
            </summary>
            <value>
            The number of files to transfer or download at once.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsOverwrite">
            <summary>
            Gets a value indicating whether to overwrite the target stream if it already exists.
            </summary>
            <value>
            <c>true</c> if this instance is overwrite; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsResume">
            <summary>
            Gets a value indicating whether to resume a previously interrupted transfer.
            </summary>
            <value>
              <c>true</c> if this instance is resume; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsBinary">
            <summary>
            Gets a value indicating whether the input file should be treated as a binary (true) or a delimited input (false).
            </summary>
            <value>
              <c>true</c> if this instance is binary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsRecursive">
            <summary>
            Gets a value indicating whether the folder transfer should recursively transfer the source folder. This is only valid for folder transfers and will be ignored for file transfers.
            </summary>
            <value>
              <c>true</c> if this instance is recursive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.IsDownload">
            <summary>
            Gets a value indicating whether this instance is downloading to the local machine instead of transfering.
            </summary>
            <value>
            <c>true</c> if this instance is download; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.MaxSegementLength">
            <summary>
            Gets the maximum length of each segement.
            </summary>
            <value>
            The maximum length of each segement.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.LocalMetadataLocation">
            <summary>
            Gets a value indicating the directory path where to store the metadata for the transfer.
            </summary>
            <value>
            The local metadata location.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.FileEncoding">
            <summary>
            Gets a value indicating the encoding of the file being transferred.
            </summary>
            <value>
            The file encoding.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferParameters.Delimiter">
            <summary>
            Gets a value indicating the record boundary delimiter for the file, if any.
            </summary>
            <value>
            The record boundary delimiter
            </value>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferProgress">
            <summary>
            Reports progress on a transfer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferProgress.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Management.DataLake.Store.TransferProgress" /> class.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="progressTracker">The progress tracker.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferProgress.Populate(Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Populates the specified metadata.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferProgress.TotalFileLength">
            <summary>
            Gets a value indicating the total length of the file to transfer.
            </summary>
            <value>
            The total length of the file.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferProgress.TotalSegmentCount">
            <summary>
            Gets a value indicating the total number of segments to transfer.
            </summary>
            <value>
            The total segment count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferProgress.TransferredByteCount">
            <summary>
            Gets a value indicating the number of bytes that have been transferred so far.
            </summary>
            <value>
            The transferred byte count.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferProgress.TransferId">
            <summary>
            Gets or sets the transfer identifier, which is used by folder transfer to find each
            individual file transfer when updating progress.
            </summary>
            <value>
            The transfer identifier.
            </value>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferProgress.GetSegmentProgress(System.Int32)">
            <summary>
            Gets the transfer progress for a particular segment.
            </summary>
            <param name="segmentNumber">The sequence number of the segment to retrieve information for</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferProgress.SetSegmentProgress(Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress)">
            <summary>
            Updates the progress for the given segment
            </summary>
            <param name="segmentProgress">The segment progress.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata">
            <summary>
            Represents metadata for a particular file segment.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.#ctor">
            <summary>
            Required by JsonSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.#ctor(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Creates a new UploadSegmentMetadata with the given segment number.
            </summary>
            <param name="segmentNumber"></param>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentLength(System.Int64,System.Int32)">
            <summary>
            Calculates the length of a typical (non-terminal) segment for a file of the given length that is split into the given number of segments.
            </summary>
            <param name="fileLength">The length of the file, in bytes.</param>
            <param name="segmentCount">The number of segments to split the file into.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Number of segments must be a positive integer</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentLength(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Calculates the length of the segment with given number for a file with given length that is split into the given number of segments.
            </summary>
            <param name="segmentNumber">The segment number.</param>
            <param name="metadata">The metadata for the current upload.</param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.BaseMultiplier">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.SegmentCountReducer">
            <summary>
            The Reducer is the number of times the length of the file should increase in order to inflate the number of segments by a factor of 'Multiplier'.
            See class description for more details.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.SegmentCountMultiplier">
            <summary>
            The Multiplier is the number of times the segment count is inflated when the length of the file increases by a factor of 'Reducer'.
            See class description for more details.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.MinimumSegmentSize">
            <summary>
            The minimum number of bytes in a segment. For best performance, should be sync-ed with the upload buffer length.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.CalculateSegmentCount(System.Int64)">
            <summary>
            Calculates the number of segments a file of the given length should be split into.
            The method to calculate this is based on some empirical measurements that allows both the number of segments and the length of each segment to grow as the input file size grows.
            They both grow on a logarithmic pattern as the file length increases.
            The formula is roughly this:
            * Multiplier = Min(100, 50 * 2 ^ Log10(FileLengthInGB))
            * SegmentCount = Max(1, Multiplier * 2 ^ Log10(FileLengthInGB)
            Essentially we quadruple the number of segments for each tenfold increase in the file length, with certain caps. The formula is designed to support both small files and
            extremely large files (and not cause very small segment lengths or very large number of segments).
            </summary>
            <param name="fileLength">The length of the file, in bytes.</param>
            <returns>
            The number of segments to split the file into. Returns 0 if fileLength is 0.
            </returns>
            <exception cref="T:System.ArgumentException">File Length cannot be negative</exception>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.SegmentNumber">
            <summary>
            Gets or sets a value indicating the number (sequence) of the segment in the file.
            </summary>
            <value>
            The segment number.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Offset">
            <summary>
            Gets or sets a value indicating the starting offset of the segment in the file.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Length">
            <summary>
            Gets or sets a value indicating the size of the segment (in bytes).
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Status">
            <summary>
            Gets or sets a value indicating the current upload status for this segment.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TransferSegmentMetadata.Path">
            <summary>
            Gets or sets a value indicating the stream path assigned to this segment.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.FileTransferThreadFailProgressUpdate">
            <summary>
            Represents a delegate that is called in the event of a thread transfering a file terminating unexpectedly.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient">
            <summary>
            Represents a general purpose file transfer client into a Data Lake Store. Supports the efficient transfer of large files.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.MaxAllowedThreadsPerFile">
            <summary>
            The maximum number of parallel threads to allow. 
            </summary>
        </member>
        <member name="E:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.OnFileTransferThreadFailProgressUpdate">
            <summary>
             An event that is registered to progress tracking to ensure that, in the event of an unexpected transfer failure,
             progress is properly updated.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})">
            <summary>
            Creates a new instance of the DataLakeStoreTransferClient class, by specifying a pointer to the FrontEnd to use for the transfer.
            </summary>
            <param name="transferParameters">The transfer parameters to use.</param>
            <param name="frontEnd">A pointer to the FrontEnd interface to use for the transfer.</param>
            <param name="progressTracker">(Optional) A tracker that reports progress on the transfer.</param>
            <param name="folderProgressTracker">(Optional) The folder progress tracker.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferParameters,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress})">
            <summary>
            Creates a new instance of the DataLakeStoreTransferClient class, by specifying a pointer to the FrontEnd to use for the transfer.
            </summary>
            <param name="transferParameters">The transfer Parameters to use.</param>
            <param name="frontEnd">A pointer to the FrontEnd interface to use for the transfer.</param>
            <param name="token">The token.</param>
            <param name="progressTracker">(Optional) A tracker that reports progress on the transfer.</param>
            <param name="folderProgressTracker">(Optional) The folder progress tracker.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.GetCanonicalMetadataFilePath">
            <summary>
            Gets the canonical metadata file path.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Parameters">
            <summary>
            Gets the parameters to use for this transfer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.Execute">
            <summary>
            Executes the transfer as defined by the input parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateParameters">
            <summary>
            Validates the parameters.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">Could not find input file</exception>
            <exception cref="T:System.ArgumentNullException">
            TargetStreamPath;Null or empty Target Stream Path
            or
            AccountName;Null or empty Account Name
            </exception>
            <exception cref="T:System.ArgumentException">Invalid TargetStreamPath, a stream path should not end with /</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">ThreadCount</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.GetFolderMetadata">
            <summary>
            Gets the metadata.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.GetMetadata">
            <summary>
            Gets the metadata.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DeleteMetadataFile">
            <summary>
            Deletes the metadata file from disk.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateMetadataForResume(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Boolean)">
            <summary>
            Validates that the metadata is valid for a resume operation, and also updates the internal Segment States to match what the Server looks like.
            If any changes are made, the metadata will be saved to its canonical location.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateMetadataForFreshTransfer(Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Verifies that the metadata is valid for a fresh transfer.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateMetadataMatchesLocalFile(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Boolean)">
            <summary>
            Verifies that the metadata is consistent with the local file information.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateFolderMetadataForResume(Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata)">
            <summary>
            Validates that the metadata is valid for a resume operation, and also updates the internal Segment States to match what the Server looks like.
            If any changes are made, the metadata will be saved to its canonical location.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateFolderMetadataForFreshTransfer(Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata)">
            <summary>
            Verifies that the metadata is valid for a fresh transfer.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ValidateFolderMetadataMatchesLocalFile(Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata)">
            <summary>
            Verifies that the metadata is consistent with the local file information.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.UploadFile(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Uploads the file using the given metadata.
            
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.DownloadFile(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Downloads the file using the given metadata.
            
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.CreateSegmentProgressTracker(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress})">
            <summary>
            Creates the segment progress tracker.
            </summary>
            <param name="metadata">The metadata.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.CreateFileProgressTracker(Microsoft.Azure.Management.DataLake.Store.TransferFolderMetadata,System.Threading.Thread@)">
            <summary>
            Creates a file progress tracker.
            </summary>
            <param name="metadata">The metadata.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.DataLakeStoreTransferClient.ConcatenateSegments(Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Concatenates all the segments defined in the metadata into a single stream.
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader">
            <summary>
            Downloads a local file in parallel by splitting it into several segments, according to the given metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Int32,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new MultipleSegmentDownloader.
            </summary>
            <param name="downloadMetadata">The metadata that keeps track of the file download.</param>
            <param name="maxThreadCount">The maximum number of threads to use. Note that in some cases, this number may not be reached.</param>
            <param name="frontEnd">A pointer to the Front End interface to perform the download to.</param>
            <param name="progressTracker">(Optional)A tracker that reports progress on each segment.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Int32,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new MultipleSegmentDownloader.
            </summary>
            <param name="downloadMetadata">The metadata that keeps track of the file download.</param>
            <param name="maxThreadCount">The maximum number of threads to use. Note that in some cases, this number may not be reached.</param>
            <param name="frontEnd">A pointer to the Front End interface to perform the download to.</param>
            <param name="token">The cancellation token to use.</param>
            <param name="progressTracker">(Optional)A tracker that reports progress on each segment.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.UseSegmentBlockBackOffRetryStrategy">
            <summary>
            Gets or sets a value indicating whether to use a back-off (exponenential) in case of individual block failures.
            The MultipleSegmentDownloader does not use this directly; it passes it on to SingleSegmentDownloader.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.Download">
            <summary>
            Executes the download of the segments in the file that were not already downloaded (i.e., those that are in a 'Pending' state).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.ProcessPendingSegments(System.Collections.Generic.Queue{Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.SegmentQueueItem},System.Collections.Concurrent.ConcurrentQueue{System.Exception})">
            <summary>
            Processes the pending segments.
            </summary>
            <param name="pendingSegments">The pending segments.</param>
            <param name="exceptions">The exceptions.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.DownloadSegment(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Downloads the segment.
            </summary>
            <param name="segmentNumber">The segment number.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.GetPendingSegmentsToDownload(Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Gets the pending segments to download.
            </summary>
            <param name="metadata">The metadata.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.UpdateSegmentMetadataStatus(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Int32,Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus)">
            <summary>
            Updates the segment metadata status.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="segmentNumber">The segment number.</param>
            <param name="newStatus">The new status.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentDownloader.SegmentQueueItem">
            <summary>
            Represents a tuple that pairs a segment number with the number of times it was attempted for download
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader">
            <summary>
            Represents a downloader for a single segment of a larger file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.#ctor(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new downloader for a single segment.
            </summary>
            <param name="segmentNumber">The sequence number of the segment.</param>
            <param name="downloadMetadata">The metadata for the entire download.</param>
            <param name="frontEnd">A pointer to the front end.</param>
            <param name="progressTracker">(Optional) A tracker to report progress on this segment.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.#ctor(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new downloader for a single segment.
            </summary>
            <param name="segmentNumber">The sequence number of the segment.</param>
            <param name="downloadMetadata">The metadata for the entire download.</param>
            <param name="frontEnd">A pointer to the front end.</param>
            <param name="token">The cancellation token to use</param>
            <param name="progressTracker">(Optional) A tracker to report progress on this segment.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.UseBackOffRetryStrategy">
            <summary>
            Gets or sets a value indicating whether to use a back-off (exponenential) in case of individual block failures.
            If set to 'false' every retry is handled immediately; otherwise an amount of time is waited between retries, as a function of power of 2.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.Download">
            <summary>
            Downloads the portion of the InputFilePath to the given TargetStreamPath, starting at the given StartOffset.
            The segment is further divided into equally-sized blocks which are downloaded in sequence.
            Each such block is attempted a certain number of times; if after that it still cannot be downloaded, the entire segment is aborted (in which case no cleanup is performed on the server).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.VerifyDownloadedStream">
            <summary>
            Verifies the downloaded stream.
            </summary>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.DownloadSegmentContents">
            <summary>
            Downloads the segment contents.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.WaitForRetry(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Waits for retry.
            </summary>
            <param name="attemptCount">The attempt count.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentDownloader.ReportProgress(System.Int64,System.Boolean)">
            <summary>
            Reports the progress.
            </summary>
            <param name="downloadedByteCount">The downloaded byte count.</param>
            <param name="isFailed">if set to <c>true</c> [is failed].</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader">
            <summary>
            Uploads a local file in parallel by splitting it into several segments, according to the given metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Int32,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new MultipleSegmentUploader.
            </summary>
            <param name="uploadMetadata">The metadata that keeps track of the file upload.</param>
            <param name="maxThreadCount">The maximum number of threads to use. Note that in some cases, this number may not be reached.</param>
            <param name="frontEnd">A pointer to the Front End interface to perform the upload to.</param>
            <param name="progressTracker">(Optional)A tracker that reports progress on each segment.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.#ctor(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Int32,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new MultipleSegmentUploader.
            </summary>
            <param name="uploadMetadata">The metadata that keeps track of the file upload.</param>
            <param name="maxThreadCount">The maximum number of threads to use. Note that in some cases, this number may not be reached.</param>
            <param name="frontEnd">A pointer to the Front End interface to perform the upload to.</param>
            <param name="token">The cancellation token to use.</param>
            <param name="progressTracker">(Optional)A tracker that reports progress on each segment.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.UseSegmentBlockBackOffRetryStrategy">
            <summary>
            Gets or sets a value indicating whether to use a back-off (exponenential) in case of individual block failures.
            The MultipleSegmentUploader does not use this directly; it passes it on to SingleSegmentUploader.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.Upload">
            <summary>
            Executes the upload of the segments in the file that were not already uploaded (i.e., those that are in a 'Pending' state).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.ProcessPendingSegments(System.Collections.Generic.Queue{Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.SegmentQueueItem},System.Collections.Concurrent.ConcurrentQueue{System.Exception})">
            <summary>
            Processes the pending segments.
            </summary>
            <param name="pendingSegments">The pending segments.</param>
            <param name="exceptions">The exceptions.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.UploadSegment(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Uploads the segment.
            </summary>
            <param name="segmentNumber">The segment number.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.GetPendingSegmentsToUpload(Microsoft.Azure.Management.DataLake.Store.TransferMetadata)">
            <summary>
            Gets the pending segments to upload.
            </summary>
            <param name="metadata">The metadata.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.UpdateSegmentMetadataStatus(Microsoft.Azure.Management.DataLake.Store.TransferMetadata,System.Int32,Microsoft.Azure.Management.DataLake.Store.SegmentTransferStatus)">
            <summary>
            Updates the segment metadata status.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="segmentNumber">The segment number.</param>
            <param name="newStatus">The new status.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.MultipleSegmentUploader.SegmentQueueItem">
            <summary>
            Represents a tuple that pairs a segment number with the number of times it was attempted for upload
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader">
            <summary>
            Represents an uploader for a single segment of a larger file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.#ctor(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new uploader for a single segment.
            </summary>
            <param name="segmentNumber">The sequence number of the segment.</param>
            <param name="uploadMetadata">The metadata for the entire upload.</param>
            <param name="frontEnd">A pointer to the front end.</param>
            <param name="progressTracker">(Optional) A tracker to report progress on this segment.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.#ctor(System.Int32,Microsoft.Azure.Management.DataLake.Store.TransferMetadata,Microsoft.Azure.Management.DataLake.Store.IFrontEndAdapter,System.Threading.CancellationToken,System.IProgress{Microsoft.Azure.Management.DataLake.Store.SegmentTransferProgress})">
            <summary>
            Creates a new uploader for a single segment.
            </summary>
            <param name="segmentNumber">The sequence number of the segment.</param>
            <param name="uploadMetadata">The metadata for the entire upload.</param>
            <param name="frontEnd">A pointer to the front end.</param>
            <param name="token">The cancellation token to use</param>
            <param name="progressTracker">(Optional) A tracker to report progress on this segment.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.UseBackOffRetryStrategy">
            <summary>
            Gets or sets a value indicating whether to use a back-off (exponenential) in case of individual block failures.
            If set to 'false' every retry is handled immediately; otherwise an amount of time is waited between retries, as a function of power of 2.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.Upload">
            <summary>
            Uploads the portion of the InputFilePath to the given TargetStreamPath, starting at the given StartOffset.
            The segment is further divided into equally-sized blocks which are uploaded in sequence.
            Each such block is attempted a certain number of times; if after that it still cannot be uploaded, the entire segment is aborted (in which case no cleanup is performed on the server).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.VerifyUploadedStream">
            <summary>
            Verifies the uploaded stream.
            </summary>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.UploadSegmentContents(System.IO.Stream,System.Int64)">
            <summary>
            Uploads the segment contents.
            </summary>
            <param name="inputStream">The input stream.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.DetermineUploadCutoffForTextFile(System.Byte[],System.Int32,System.IO.Stream)">
            <summary>
            Determines the upload cutoff for text file.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="bufferDataLength">Length of the buffer data.</param>
            <param name="inputStream">The input stream.</param>
            <returns></returns>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException"></exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.UploadBuffer(System.Byte[],System.Int32,System.Int64)">
            <summary>
            Uploads the buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="bytesToCopy">The bytes to copy.</param>
            <param name="targetStreamOffset">The target stream offset.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.ReadIntoBuffer(System.IO.Stream,System.Byte[],System.Int32,System.Int64)">
            <summary>
            Reads the into buffer.
            </summary>
            <param name="inputStream">The input stream.</param>
            <param name="buffer">The buffer.</param>
            <param name="bufferOffset">The buffer offset.</param>
            <param name="streamEndPosition">The stream end position.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.WaitForRetry(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Waits for retry.
            </summary>
            <param name="attemptCount">The attempt count.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.OpenInputStream">
            <summary>
            Opens the input stream.
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException">StartOffset is beyond the end of the input file;StartOffset</exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.SingleSegmentUploader.ReportProgress(System.Int64,System.Boolean)">
            <summary>
            Reports the progress.
            </summary>
            <param name="uploadedByteCount">The uploaded byte count.</param>
            <param name="isFailed">if set to <c>true</c> [is failed].</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations">
            <summary>
            FileSystemOperations operations.
            </summary>
            <summary>
            FileSystemOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.PathExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Test the existence of a file or directory object specified by the file path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to test.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.DownloadFile(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.Threading.CancellationToken)">
            <summary>
            Downloads a file from the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The Data Lake Store path (starting with '/') of the file to download.
            </param>
            <param name='destinationPath'>
            The local path to download the file to. If a directory is specified, the file name will be the same as the source file name
            </param>
            <param name='threadCount'>
            The maximum number of threads to use during the download. By default, this number will be computed based on file size.
            </param>
            <param name='resume'>
            A switch indicating if this download is a continuation of a previous, failed download. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this download should overwrite the the target file if it exists. Default is false, and the download will fast fail if the target file exists.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the download operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid download is attempted or a file is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.UploadFile(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads a file to the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The local source file to upload to the Data Lake Store account.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the directory or directory and filename to upload to.
            </param>
            <param name='threadCount'>
            The maximum number of threads to use during the upload. By default, this number will be computed based on file size.
            </param>
            <param name='resume'>
            A switch indicating if this upload is a continuation of a previous, failed upload. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this upload should overwrite the target file if it exists. Default is false, and the upload will fast fail if the target file exists.
            </param>
            <param name='uploadAsBinary'>
            A switch indicating this upload should treat the file as binary, which is slightly more performant but does not ensure record boundary integrity.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the upload operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid upload is attempted or the file is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.DownloadFolder(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress},System.Threading.CancellationToken)">
            <summary>
            Downloads a folder from the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The Data Lake Store path (starting with '/') of the directory to download.
            </param>
            <param name='destinationPath'>
            The local path to download the folder to.
            </param>
            <param name='perFileThreadCount'>
            The maximum number of threads to use per file during the download. By default, this number will be computed based on folder structure and average file size.
            </param>
            <param name='concurrentFileCount'>
            The maximum number of files to download at once. By default, this number will be computed based on folder structure and number of files.
            </param>
            <param name='resume'>
            A switch indicating if this download is a continuation of a previous, failed download. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this download should overwrite the contents of the target directory if it exists. Default is false, and the download will fast fail if the target location exists.
            </param>
            <param name='recurse'>
            A switch indicating this download should download the source directory recursively or just the top level. Default is false, only the top level will be downloaded.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the download operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid download is attempted or a file/folder is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.UploadFolder(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads a folder to the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The local source folder to upload to the Data Lake Store account.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the directory to upload to.
            </param>
            <param name='perFileThreadCount'>
            The maximum number of threads to use per file during the upload. By default, this number will be computed based on folder structure and average file size.
            </param>
            <param name='concurrentFileCount'>
            The maximum number of files to upload at once. By default, this number will be computed based on folder structure and number of files.
            </param>
            <param name='resume'>
            A switch indicating if this upload is a continuation of a previous, failed upload. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this upload should overwrite the contents of the target directory if it exists. Default is false, and the upload will fast fail if the target location exists.
            </param>
            <param name='uploadAsBinary'>
            A switch indicating this upload should treat all data as binary, which is slightly more performant but does not ensure record boundary integrity. This is recommended for large folders of mixed binary and text files or binary only directories. Default is false
            </param>
            <param name='recurse'>
            A switch indicating this upload should upload the source directory recursively or just the top level. Default is false, only the top level will be uploaded.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the upload operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid upload is attempted or a file/folder is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.#ctor(Microsoft.Azure.Management.DataLake.Store.DataLakeStoreFileSystemManagementClient)">
            <summary>
            Initializes a new instance of the FileSystemOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.Client">
            <summary>
            Gets a reference to the DataLakeStoreFileSystemManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Appends to the specified file, optionally first creating the file if it
            does not yet exist. This method supports multiple concurrent appends to the
            file. NOTE: The target must not contain data added by Create or normal
            (serial) Append. ConcurrentAppend and Append cannot be used
            interchangeably; once a target file has been modified using either of these
            append options, the other append option cannot be used on the target file.
            ConcurrentAppend does not guarantee order and can result in duplicated data
            landing in the target file.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file to which to append
            using concurrent append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='appendMode'>
            Indicates the concurrent append call should create the file if it doesn't
            exist or just open the existing file for append. Possible values include:
            'autocreate'
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets or removes the expiration time on the specified file. This operation
            can only be executed against files. Folders are not supported.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file on which to set or
            remove the expiration time.
            </param>
            <param name='expiryOption'>
            Indicates the type of expiration to use for the file: 1. NeverExpire:
            ExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in
            milliseconds representing the expiration date relative to when file
            expiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer
            in milliseconds representing the expiration date relative to file creation.
            4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp
            relative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',
            'RelativeToNow', 'RelativeToCreationDate', 'Absolute'
            </param>
            <param name='expireTime'>
            The time that the file will expire, corresponding to the ExpiryOption that
            was set.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks if the specified access is available at the given path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to check access.
            </param>
            <param name='fsaction'>
            File system operation read/write/execute in string form, matching regex
            pattern '[rwx-]{3}'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.MkdirsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the directory to create.
            </param>
            <param name='permission'>
            Optional octal permission with which the directory should be created.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.ConcatWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Concatenates the list of source files into the destination file, removing
            all source files upon success.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
            <param name='sources'>
            A list of comma separated Data Lake Store paths (starting with '/') of the
            files to concatenate, in the order in which they should be concatenated.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.MsConcatWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Concatenates the list of source files into the destination file, deleting
            all source files upon success. This method accepts more source file paths
            than the Concat method. This method and the parameters it accepts are
            subject to change for usability in an upcoming version.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='msConcatDestinationPath'>
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
            <param name='streamContents'>
            A list of Data Lake Store paths (starting with '/') of the source files.
            Must be a comma-separated path list in the format:
            sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
            </param>
            <param name='deleteSourceDirectory'>
            Indicates that as an optimization instead of deleting each individual
            source stream, delete the source stream folder if all streams are in the
            same folder instead. This results in a substantial performance improvement
            when the only streams in the folder are part of the concatenation
            operation. WARNING: This includes the deletion of any other files that are
            not source files. Only set this to true when source files are the only
            files in the source directory.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the list of file status objects specified by the file path, with
            optional pagination parameters
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='listFilePath'>
            The Data Lake Store path (starting with '/') of the directory to list.
            </param>
            <param name='listSize'>
            Gets or sets the number of items to return. Optional.
            </param>
            <param name='listAfter'>
            Gets or sets the item or lexographical index after which to begin returning
            results. For example, a file list of 'a','b','d' and listAfter='b' will
            return 'd', and a listAfter='c' will also return 'd'. Optional.
            </param>
            <param name='listBefore'>
            Gets or sets the item or lexographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also return
            'a','b'. Optional.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the file content summary object specified by the file path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getContentSummaryFilePath'>
            The Data Lake Store path (starting with '/') of the file for which to
            retrieve the summary.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the file status object specified by the file path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to retrieve the status.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.AppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Used for serial appends to the specified file. NOTE: The target must not
            contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot
            be used interchangeably; once a target file has been modified using either
            of these append options, the other append option cannot be used on the
            target file.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to which to
            append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='offset'>
            The optional offset in the stream to begin the append operation. Default is
            to append at the end of the stream.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the appends with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit when syncFlag is DATA or METADATA.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a file with optionally specified content. NOTE: If content is
            provided, the resulting file cannot be modified using ConcurrentAppend.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to create.
            </param>
            <param name='streamContents'>
            The file contents to include when creating the file. This parameter is
            optional, resulting in an empty file if not specified.
            </param>
            <param name='overwrite'>
            The indication of if the file should be overwritten.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the create. DATA
            indicates that more data will be sent immediately by the client, the file
            handle should remain open/locked, and file metadata (including file length,
            last modified time) should NOT get updated. METADATA indicates that more
            data will be sent immediately by the client, the file handle should remain
            open/locked, and file metadata should get updated. CLOSE indicates that the
            client is done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
            <param name='permission'>
            The octal representation of the unnamed user, mask and other permissions
            that should be set for the file when created. If not specified, it inherits
            these from the container.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.OpenWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Opens and reads from the specified file.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to open.
            </param>
            <param name='length'>
            The number of bytes that the server will attempt to retrieve. It will
            retrieve &lt;= length bytes.
            </param>
            <param name='offset'>
            The byte offset to start reading data from.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the reads with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.SetAclWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the Access Control List (ACL) for a file or folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory on
            which to set the ACL.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Modifies existing Access Control List (ACL) entries on a file or folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='modifyAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being modified.
            </param>
            <param name='aclspec'>
            The ACL specification included in ACL modification operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes existing Access Control List (ACL) entries for a file or folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='removeAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes the existing Default Access Control List (ACL) of the specified
            directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='defaultAclFilePath'>
            The Data Lake Store path (starting with '/') of the directory with the
            default ACL being removed.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes the existing Access Control List (ACL) of the specified file or
            directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets Access Control List (ACL) entries for the specified file or directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to get the ACL.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of object ID for ACL
            entries. tooid=false returns friendly names instead of the AAD Object ID.
            Default value is true, returning AAD object IDs.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the requested file or directory, optionally recursively.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file or directory to
            delete.
            </param>
            <param name='recursive'>
            The optional switch indicating if the delete should be recursive
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.RenameWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Rename a file or directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='renameFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory to
            move/rename.
            </param>
            <param name='destination'>
            The path to move/rename the file or folder to
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the owner of a file or directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setOwnerFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the owner.
            </param>
            <param name='owner'>
            The AAD Object ID of the user owner of the file or directory. If empty, the
            property will remain unchanged.
            </param>
            <param name='group'>
            The AAD Object ID of the group owner of the file or directory. If empty,
            the property will remain unchanged.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the permission of the file or folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setPermissionFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the permission.
            </param>
            <param name='permission'>
            A string representation of the permission (i.e 'rwx'). If empty, this
            property remains unchanged.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions">
            <summary>
            Extension methods for FileSystemOperations.
            </summary>
            <summary>
            Extension methods for FileSystemOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExists(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)">
            <summary>
            Test the existence of a file or directory object specified by the file path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to test the existence of.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.PathExistsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Test the existence of a file or directory object specified by the file path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to test the existence of.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppend(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag})">
            <summary>
            Appends to the specified file, optionally first creating the file if it
            does not yet exist. This method supports multiple concurrent appends to the
            file. NOTE: The target must not contain data added by Create or normal
            (serial) Append. ConcurrentAppend and Append cannot be used
            interchangeably; once a target file has been modified using either of these
            append options, the other append option cannot be used on the target file.
            ConcurrentAppend does not guarantee order and can result in duplicated data
            landing in the target file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file to which to append
            using concurrent append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='appendMode'>
            Indicates the concurrent append call should create the file if it doesn't
            exist or just open the existing file for append. Possible values include:
            'autocreate'
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcurrentAppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Threading.CancellationToken)">
            <summary>
            Appends to the specified file, optionally first creating the file if it
            does not yet exist. This method supports multiple concurrent appends to the
            file. NOTE: The target must not contain data added by Create or normal
            (serial) Append. ConcurrentAppend and Append cannot be used
            interchangeably; once a target file has been modified using either of these
            append options, the other append option cannot be used on the target file.
            ConcurrentAppend does not guarantee order and can result in duplicated data
            landing in the target file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file to which to append
            using concurrent append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='appendMode'>
            Indicates the concurrent append call should create the file if it doesn't
            exist or just open the existing file for append. Possible values include:
            'autocreate'
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiry(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64})">
            <summary>
            Sets or removes the expiration time on the specified file. This operation
            can only be executed against files. Folders are not supported.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file on which to set or
            remove the expiration time.
            </param>
            <param name='expiryOption'>
            Indicates the type of expiration to use for the file: 1. NeverExpire:
            ExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in
            milliseconds representing the expiration date relative to when file
            expiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer
            in milliseconds representing the expiration date relative to file creation.
            4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp
            relative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',
            'RelativeToNow', 'RelativeToCreationDate', 'Absolute'
            </param>
            <param name='expireTime'>
            The time that the file will expire, corresponding to the ExpiryOption that
            was set.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetFileExpiryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Sets or removes the expiration time on the specified file. This operation
            can only be executed against files. Folders are not supported.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file on which to set or
            remove the expiration time.
            </param>
            <param name='expiryOption'>
            Indicates the type of expiration to use for the file: 1. NeverExpire:
            ExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in
            milliseconds representing the expiration date relative to when file
            expiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer
            in milliseconds representing the expiration date relative to file creation.
            4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp
            relative to 1/1/1970 00:00:00. Possible values include: 'NeverExpire',
            'RelativeToNow', 'RelativeToCreationDate', 'Absolute'
            </param>
            <param name='expireTime'>
            The time that the file will expire, corresponding to the ExpiryOption that
            was set.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccess(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)">
            <summary>
            Checks if the specified access is available at the given path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to check access.
            </param>
            <param name='fsaction'>
            File system operation read/write/execute in string form, matching regex
            pattern '[rwx-]{3}'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CheckAccessAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks if the specified access is available at the given path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to check access.
            </param>
            <param name='fsaction'>
            File system operation read/write/execute in string form, matching regex
            pattern '[rwx-]{3}'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Mkdirs(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the directory to create.
            </param>
            <param name='permission'>
            Optional octal permission with which the directory should be created.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MkdirsAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Creates a directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the directory to create.
            </param>
            <param name='permission'>
            Optional octal permission with which the directory should be created.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Concat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Concatenates the list of source files into the destination file, removing
            all source files upon success.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
            <param name='sources'>
            A list of comma separated Data Lake Store paths (starting with '/') of the
            files to concatenate, in the order in which they should be concatenated.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            <summary>
            Concatenates the list of source files into the destination file, removing
            all source files upon success.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
            <param name='sources'>
            A list of comma separated Data Lake Store paths (starting with '/') of the
            files to concatenate, in the order in which they should be concatenated.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcat(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean})">
            <summary>
            Concatenates the list of source files into the destination file, deleting
            all source files upon success. This method accepts more source file paths
            than the Concat method. This method and the parameters it accepts are
            subject to change for usability in an upcoming version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='msConcatDestinationPath'>
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
            <param name='streamContents'>
            A list of Data Lake Store paths (starting with '/') of the source files.
            Must be a comma-separated path list in the format:
            sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
            </param>
            <param name='deleteSourceDirectory'>
            Indicates that as an optimization instead of deleting each individual
            source stream, delete the source stream folder if all streams are in the
            same folder instead. This results in a substantial performance improvement
            when the only streams in the folder are part of the concatenation
            operation. WARNING: This includes the deletion of any other files that are
            not source files. Only set this to true when source files are the only
            files in the source directory.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.MsConcatAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Concatenates the list of source files into the destination file, deleting
            all source files upon success. This method accepts more source file paths
            than the Concat method. This method and the parameters it accepts are
            subject to change for usability in an upcoming version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='msConcatDestinationPath'>
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
            </param>
            <param name='streamContents'>
            A list of Data Lake Store paths (starting with '/') of the source files.
            Must be a comma-separated path list in the format:
            sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
            </param>
            <param name='deleteSourceDirectory'>
            Indicates that as an optimization instead of deleting each individual
            source stream, delete the source stream folder if all streams are in the
            same folder instead. This results in a substantial performance improvement
            when the only streams in the folder are part of the concatenation
            operation. WARNING: This includes the deletion of any other files that are
            not source files. Only set this to true when source files are the only
            files in the source directory.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get the list of file status objects specified by the file path, with
            optional pagination parameters
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='listFilePath'>
            The Data Lake Store path (starting with '/') of the directory to list.
            </param>
            <param name='listSize'>
            Gets or sets the number of items to return. Optional.
            </param>
            <param name='listAfter'>
            Gets or sets the item or lexographical index after which to begin returning
            results. For example, a file list of 'a','b','d' and listAfter='b' will
            return 'd', and a listAfter='c' will also return 'd'. Optional.
            </param>
            <param name='listBefore'>
            Gets or sets the item or lexographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also return
            'a','b'. Optional.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ListFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get the list of file status objects specified by the file path, with
            optional pagination parameters
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='listFilePath'>
            The Data Lake Store path (starting with '/') of the directory to list.
            </param>
            <param name='listSize'>
            Gets or sets the number of items to return. Optional.
            </param>
            <param name='listAfter'>
            Gets or sets the item or lexographical index after which to begin returning
            results. For example, a file list of 'a','b','d' and listAfter='b' will
            return 'd', and a listAfter='c' will also return 'd'. Optional.
            </param>
            <param name='listBefore'>
            Gets or sets the item or lexographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also return
            'a','b'. Optional.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummary(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)">
            <summary>
            Gets the file content summary object specified by the file path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getContentSummaryFilePath'>
            The Data Lake Store path (starting with '/') of the file for which to
            retrieve the summary.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetContentSummaryAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the file content summary object specified by the file path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getContentSummaryFilePath'>
            The Data Lake Store path (starting with '/') of the file for which to
            retrieve the summary.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get the file status object specified by the file path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to retrieve the status.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetFileStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get the file status object specified by the file path.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to retrieve the status.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and group.
            tooid=false returns friendly names instead of the AAD Object ID. Default
            value is true, returning AAD object IDs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Append(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Used for serial appends to the specified file. NOTE: The target must not
            contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot
            be used interchangeably; once a target file has been modified using either
            of these append options, the other append option cannot be used on the
            target file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to which to
            append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='offset'>
            The optional offset in the stream to begin the append operation. Default is
            to append at the end of the stream.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the appends with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit when syncFlag is DATA or METADATA.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.AppendAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Used for serial appends to the specified file. NOTE: The target must not
            contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot
            be used interchangeably; once a target file has been modified using either
            of these append options, the other append option cannot be used on the
            target file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to which to
            append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='offset'>
            The optional offset in the stream to begin the append operation. Default is
            to append at the end of the stream.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent append.
            DATA indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including file
            length, last modified time) should NOT get updated. METADATA indicates that
            more data will be sent immediately by the client, the file handle should
            remain open/locked, and file metadata should get updated. CLOSE indicates
            that the client is done sending data, the file handle should be
            closed/unlocked, and file metadata should get updated. Possible values
            include: 'DATA', 'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the appends with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit when syncFlag is DATA or METADATA.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Create(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Int32})">
            <summary>
            Creates a file with optionally specified content. NOTE: If content is
            provided, the resulting file cannot be modified using ConcurrentAppend.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to create.
            </param>
            <param name='streamContents'>
            The file contents to include when creating the file. This parameter is
            optional, resulting in an empty file if not specified.
            </param>
            <param name='overwrite'>
            The indication of if the file should be overwritten.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the create. DATA
            indicates that more data will be sent immediately by the client, the file
            handle should remain open/locked, and file metadata (including file length,
            last modified time) should NOT get updated. METADATA indicates that more
            data will be sent immediately by the client, the file handle should remain
            open/locked, and file metadata should get updated. CLOSE indicates that the
            client is done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
            <param name='permission'>
            The octal representation of the unnamed user, mask and other permissions
            that should be set for the file when created. If not specified, it inherits
            these from the container.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.CreateAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Creates a file with optionally specified content. NOTE: If content is
            provided, the resulting file cannot be modified using ConcurrentAppend.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to create.
            </param>
            <param name='streamContents'>
            The file contents to include when creating the file. This parameter is
            optional, resulting in an empty file if not specified.
            </param>
            <param name='overwrite'>
            The indication of if the file should be overwritten.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the create. DATA
            indicates that more data will be sent immediately by the client, the file
            handle should remain open/locked, and file metadata (including file length,
            last modified time) should NOT get updated. METADATA indicates that more
            data will be sent immediately by the client, the file handle should remain
            open/locked, and file metadata should get updated. CLOSE indicates that the
            client is done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics, meaning
            that only clients that append to the file with the same leaseId will be
            allowed to do so.
            </param>
            <param name='permission'>
            The octal representation of the unnamed user, mask and other permissions
            that should be set for the file when created. If not specified, it inherits
            these from the container.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Open(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Guid})">
            <summary>
            Opens and reads from the specified file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to open.
            </param>
            <param name='length'>
            The number of bytes that the server will attempt to retrieve. It will
            retrieve &lt;= length bytes.
            </param>
            <param name='offset'>
            The byte offset to start reading data from.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the reads with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.OpenAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Opens and reads from the specified file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to open.
            </param>
            <param name='length'>
            The number of bytes that the server will attempt to retrieve. It will
            retrieve &lt;= length bytes.
            </param>
            <param name='offset'>
            The byte offset to start reading data from.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the reads with the same
            fileSessionId are from the same client and same session. This will give a
            performance benefit.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)">
            <summary>
            Sets the Access Control List (ACL) for a file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory on
            which to set the ACL.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the Access Control List (ACL) for a file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory on
            which to set the ACL.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)">
            <summary>
            Modifies existing Access Control List (ACL) entries on a file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='modifyAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being modified.
            </param>
            <param name='aclspec'>
            The ACL specification included in ACL modification operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.ModifyAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Modifies existing Access Control List (ACL) entries on a file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='modifyAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being modified.
            </param>
            <param name='aclspec'>
            The ACL specification included in ACL modification operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntries(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)">
            <summary>
            Removes existing Access Control List (ACL) entries for a file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='removeAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclEntriesAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes existing Access Control List (ACL) entries for a file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='removeAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)">
            <summary>
            Removes the existing Default Access Control List (ACL) of the specified
            directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='defaultAclFilePath'>
            The Data Lake Store path (starting with '/') of the directory with the
            default ACL being removed.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveDefaultAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the existing Default Access Control List (ACL) of the specified
            directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='defaultAclFilePath'>
            The Data Lake Store path (starting with '/') of the directory with the
            default ACL being removed.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAcl(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String)">
            <summary>
            Removes the existing Access Control List (ACL) of the specified file or
            directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RemoveAclAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes the existing Access Control List (ACL) of the specified file or
            directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory with
            the ACL being removed.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatus(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gets Access Control List (ACL) entries for the specified file or directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to get the ACL.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of object ID for ACL
            entries. tooid=false returns friendly names instead of the AAD Object ID.
            Default value is true, returning AAD object IDs.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.GetAclStatusAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets Access Control List (ACL) entries for the specified file or directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to get the ACL.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of object ID for ACL
            entries. tooid=false returns friendly names instead of the AAD Object ID.
            Default value is true, returning AAD object IDs.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Deletes the requested file or directory, optionally recursively.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file or directory to
            delete.
            </param>
            <param name='recursive'>
            The optional switch indicating if the delete should be recursive
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Deletes the requested file or directory, optionally recursively.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file or directory to
            delete.
            </param>
            <param name='recursive'>
            The optional switch indicating if the delete should be recursive
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.Rename(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)">
            <summary>
            Rename a file or directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='renameFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory to
            move/rename.
            </param>
            <param name='destination'>
            The path to move/rename the file or folder to
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.RenameAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Rename a file or directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='renameFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory to
            move/rename.
            </param>
            <param name='destination'>
            The path to move/rename the file or folder to
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwner(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the owner of a file or directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setOwnerFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the owner.
            </param>
            <param name='owner'>
            The AAD Object ID of the user owner of the file or directory. If empty, the
            property will remain unchanged.
            </param>
            <param name='group'>
            The AAD Object ID of the group owner of the file or directory. If empty,
            the property will remain unchanged.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetOwnerAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the owner of a file or directory.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setOwnerFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the owner.
            </param>
            <param name='owner'>
            The AAD Object ID of the user owner of the file or directory. If empty, the
            property will remain unchanged.
            </param>
            <param name='group'>
            The AAD Object ID of the group owner of the file or directory. If empty,
            the property will remain unchanged.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermission(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String)">
            <summary>
            Sets the permission of the file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setPermissionFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the permission.
            </param>
            <param name='permission'>
            A string representation of the permission (i.e 'rwx'). If empty, this
            property remains unchanged.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FileSystemOperationsExtensions.SetPermissionAsync(Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the permission of the file or folder.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='setPermissionFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to set the permission.
            </param>
            <param name='permission'>
            A string representation of the permission (i.e 'rwx'). If empty, this
            property remains unchanged.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.IAccountOperations">
            <summary>
            AccountOperations operations.
            </summary>
            <summary>
            AccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.FirewallRuleExistsWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Tests the existence of the specified Data Lake Store firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to test the firewall
            rule's existence.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to test for existence.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.ExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Tests whether the specified Data Lake Store account exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to test existence of.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to retrieve.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.EnableKeyVaultWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Attempts to enable a user managed Key Vault for encryption of the
            specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to attempt to enable the
            Key Vault for.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource
            group. The response includes a link to the next page of results, if
            any.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account(s).
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
            </param>
            <param name='count'>
            A Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='select'>
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
            </param>
            <param name='count'>
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response,
            e.g. Categories?$count=true. Optional.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to create.
            </param>
            <param name='parameters'>
            Parameters supplied to create the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified Data Lake Store account information.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the Data Lake Store account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='name'>
            The name of the Data Lake Store account to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within a specific resource
            group. The response includes a link to the next page of results, if
            any.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IAccountOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store accounts within the subscription. The
            response includes a link to the next page of results, if any.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations">
            <summary>
            FileSystemOperations operations.
            </summary>
            <summary>
            FileSystemOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.PathExistsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Test the existence of a file or directory object specified by the file path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or directory for
            which to test.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.UploadFolder(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads a folder to the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The local source folder to upload to the Data Lake Store account.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the directory to upload to.
            </param>
            <param name='perFileThreadCount'>
            The maximum number of threads to use per file during the upload. By default, this number will be computed based on folder structure and average file size.
            </param>
            <param name='concurrentFileCount'>
            The maximum number of files to upload at once. By default, this number will be computed based on folder structure and number of files.
            </param>
            <param name='resume'>
            A switch indicating if this upload is a continuation of a previous, failed upload. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this upload should overwrite the contents of the target directory if it exists. Default is false, and the upload will fast fail if the target location exists.
            </param>
            <param name='uploadAsBinary'>
            A switch indicating this upload should treat all data as binary, which is slightly more performant but does not ensure record boundary integrity. This is recommended for large folders of mixed binary and text files or binary only directories. Default is false
            </param>
            <param name='recurse'>
            A switch indicating this upload should upload the source directory recursively or just the top level. Default is false, only the top level will be uploaded.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the upload operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid upload is attempted or a file/folder is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DownloadFolder(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferFolderProgress},System.Threading.CancellationToken)">
            <summary>
            Downloads a folder from the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The Data Lake Store path (starting with '/') of the directory to download.
            </param>
            <param name='destinationPath'>
            The local path to download the folder to.
            </param>
            <param name='perFileThreadCount'>
            The maximum number of threads to use per file during the download. By default, this number will be computed based on folder structure and average file size.
            </param>
            <param name='concurrentFileCount'>
            The maximum number of files to download at once. By default, this number will be computed based on folder structure and number of files.
            </param>
            <param name='resume'>
            A switch indicating if this download is a continuation of a previous, failed download. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this download should overwrite the contents of the target directory if it exists. Default is false, and the download will fast fail if the target location exists.
            </param>
            <param name='recurse'>
            A switch indicating this download should download the source directory recursively or just the top level. Default is false, only the top level will be downloaded.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the download operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid download is attempted or a file/folder is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.UploadFile(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads a file to the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The local source file to upload to the Data Lake Store account.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the directory or directory and filename to upload to.
            </param>
            <param name='threadCount'>
            The maximum number of threads to use during the upload. By default, this number will be computed based on file size.
            </param>
            <param name='resume'>
            A switch indicating if this upload is a continuation of a previous, failed upload. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this upload should overwrite the target file if it exists. Default is false, and the upload will fast fail if the target file exists.
            </param>
            <param name='uploadAsBinary'>
            A switch indicating this upload should treat the file as binary, which is slightly more performant but does not ensure record boundary integrity.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the upload operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid upload is attempted or the file is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DownloadFile(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.IProgress{Microsoft.Azure.Management.DataLake.Store.TransferProgress},System.Threading.CancellationToken)">
            <summary>
            Downloads a file from the specified Data Lake Store account.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations on.
            </param>
            <param name='sourcePath'>
            The Data Lake Store path (starting with '/') of the file to download.
            </param>
            <param name='destinationPath'>
            The local path to download the file to. If a directory is specified, the file name will be the same as the source file name
            </param>
            <param name='threadCount'>
            The maximum number of threads to use during the download. By default, this number will be computed based on file size.
            </param>
            <param name='resume'>
            A switch indicating if this download is a continuation of a previous, failed download. Default is false.
            </param>
            <param name='overwrite'>
            A switch indicating this download should overwrite the the target file if it exists. Default is false, and the download will fast fail if the target file exists.
            </param>
            <param name='progressTracker'>
            An optional delegate that can be used to track the progress of the download operation asynchronously.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            Thrown when the operation takes too long to complete or if the user explicitly cancels it.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.InvalidMetadataException">
            Thrown when resume metadata is corrupt or not associated with the current operation.
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown when the source path cannot be found.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if an invalid download is attempted or a file is modified externally during the operation.
            </exception>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.TransferFailedException">
            Thrown if the transfer operation fails.
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcurrentAppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Appends to the specified file, optionally first creating the file
            if it does not yet exist. This method supports multiple concurrent
            appends to the file. NOTE: The target must not contain data added
            by Create or normal (serial) Append. ConcurrentAppend and Append
            cannot be used interchangeably; once a target file has been
            modified using either of these append options, the other append
            option cannot be used on the target file. ConcurrentAppend does not
            guarantee order and can result in duplicated data landing in the
            target file.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file to which
            to append using concurrent append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='appendMode'>
            Indicates the concurrent append call should create the file if it
            doesn't exist or just open the existing file for append. Possible
            values include: 'autocreate'
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent
            append. DATA indicates that more data will be sent immediately by
            the client, the file handle should remain open/locked, and file
            metadata (including file length, last modified time) should NOT get
            updated. METADATA indicates that more data will be sent immediately
            by the client, the file handle should remain open/locked, and file
            metadata should get updated. CLOSE indicates that the client is
            done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetFileExpiryWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType,System.Nullable{System.Int64},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets or removes the expiration time on the specified file. This
            operation can only be executed against files. Folders are not
            supported.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file on which
            to set or remove the expiration time.
            </param>
            <param name='expiryOption'>
            Indicates the type of expiration to use for the file: 1.
            NeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime is
            an integer in milliseconds representing the expiration date
            relative to when file expiration is updated. 3.
            RelativeToCreationDate: ExpireTime is an integer in milliseconds
            representing the expiration date relative to file creation. 4.
            Absolute: ExpireTime is an integer in milliseconds, as a Unix
            timestamp relative to 1/1/1970 00:00:00. Possible values include:
            'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate',
            'Absolute'
            </param>
            <param name='expireTime'>
            The time that the file will expire, corresponding to the
            ExpiryOption that was set.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CheckAccessWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks if the specified access is available at the given path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the file or
            directory for which to check access.
            </param>
            <param name='fsaction'>
            File system operation read/write/execute in string form, matching
            regex pattern '[rwx-]{3}'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MkdirsWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='path'>
            The Data Lake Store path (starting with '/') of the directory to
            create.
            </param>
            <param name='permission'>
            Optional octal permission with which the directory should be
            created.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ConcatWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Concatenates the list of source files into the destination file,
            removing all source files upon success.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='destinationPath'>
            The Data Lake Store path (starting with '/') of the destination
            file resulting from the concatenation.
            </param>
            <param name='sources'>
            A list of comma separated Data Lake Store paths (starting with '/')
            of the files to concatenate, in the order in which they should be
            concatenated.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.MsConcatWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Concatenates the list of source files into the destination file,
            deleting all source files upon success. This method accepts more
            source file paths than the Concat method. This method and the
            parameters it accepts are subject to change for usability in an
            upcoming version.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='msConcatDestinationPath'>
            The Data Lake Store path (starting with '/') of the destination
            file resulting from the concatenation.
            </param>
            <param name='streamContents'>
            A list of Data Lake Store paths (starting with '/') of the source
            files. Must be a comma-separated path list in the format:
            sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
            </param>
            <param name='deleteSourceDirectory'>
            Indicates that as an optimization instead of deleting each
            individual source stream, delete the source stream folder if all
            streams are in the same folder instead. This results in a
            substantial performance improvement when the only streams in the
            folder are part of the concatenation operation. WARNING: This
            includes the deletion of any other files that are not source files.
            Only set this to true when source files are the only files in the
            source directory.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ListFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the list of file status objects specified by the file path,
            with optional pagination parameters
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='listFilePath'>
            The Data Lake Store path (starting with '/') of the directory to
            list.
            </param>
            <param name='listSize'>
            Gets or sets the number of items to return. Optional.
            </param>
            <param name='listAfter'>
            Gets or sets the item or lexographical index after which to begin
            returning results. For example, a file list of 'a','b','d' and
            listAfter='b' will return 'd', and a listAfter='c' will also return
            'd'. Optional.
            </param>
            <param name='listBefore'>
            Gets or sets the item or lexographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also
            return 'a','b'. Optional.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and
            group. tooid=false returns friendly names instead of the AAD Object
            ID. Default value is true, returning AAD object IDs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetContentSummaryWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the file content summary object specified by the file path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='getContentSummaryFilePath'>
            The Data Lake Store path (starting with '/') of the file for which
            to retrieve the summary.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetFileStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the file status object specified by the file path.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='getFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory for which to retrieve the status.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of owner and
            group. tooid=false returns friendly names instead of the AAD Object
            ID. Default value is true, returning AAD object IDs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.AppendWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Int64},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Used for serial appends to the specified file. NOTE: The target
            must not contain data added by ConcurrentAppend. ConcurrentAppend
            and Append cannot be used interchangeably; once a target file has
            been modified using either of these append options, the other
            append option cannot be used on the target file.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to which
            to append.
            </param>
            <param name='streamContents'>
            The file contents to include when appending to the file.
            </param>
            <param name='offset'>
            The optional offset in the stream to begin the append operation.
            Default is to append at the end of the stream.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the concurrent
            append. DATA indicates that more data will be sent immediately by
            the client, the file handle should remain open/locked, and file
            metadata (including file length, last modified time) should NOT get
            updated. METADATA indicates that more data will be sent immediately
            by the client, the file handle should remain open/locked, and file
            metadata should get updated. CLOSE indicates that the client is
            done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics,
            meaning that only clients that append to the file with the same
            leaseId will be allowed to do so.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the appends with the
            same fileSessionId are from the same client and same session. This
            will give a performance benefit when syncFlag is DATA or METADATA.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag},System.Nullable{System.Guid},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a file with optionally specified content. NOTE: If content
            is provided, the resulting file cannot be modified using
            ConcurrentAppend.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to create.
            </param>
            <param name='streamContents'>
            The file contents to include when creating the file. This parameter
            is optional, resulting in an empty file if not specified.
            </param>
            <param name='overwrite'>
            The indication of if the file should be overwritten.
            </param>
            <param name='syncFlag'>
            Optionally indicates what to do after completion of the create.
            DATA indicates that more data will be sent immediately by the
            client, the file handle should remain open/locked, and file
            metadata (including file length, last modified time) should NOT get
            updated. METADATA indicates that more data will be sent immediately
            by the client, the file handle should remain open/locked, and file
            metadata should get updated. CLOSE indicates that the client is
            done sending data, the file handle should be closed/unlocked, and
            file metadata should get updated. Possible values include: 'DATA',
            'METADATA', 'CLOSE'
            </param>
            <param name='leaseId'>
            Optional unique GUID per file to ensure single writer semantics,
            meaning that only clients that append to the file with the same
            leaseId will be allowed to do so.
            </param>
            <param name='permission'>
            The octal representation of the unnamed user, mask and other
            permissions that should be set for the file when created. If not
            specified, it inherits these from the container.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.OpenWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Opens and reads from the specified file.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='directFilePath'>
            The Data Lake Store path (starting with '/') of the file to open.
            </param>
            <param name='length'>
            The number of bytes that the server will attempt to retrieve. It
            will retrieve &lt;= length bytes.
            </param>
            <param name='offset'>
            The byte offset to start reading data from.
            </param>
            <param name='fileSessionId'>
            Optional unique GUID per file indicating all the reads with the
            same fileSessionId are from the same client and same session. This
            will give a performance benefit.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetAclWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the Access Control List (ACL) for a file or folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='setAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory on which to set the ACL.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.ModifyAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Modifies existing Access Control List (ACL) entries on a file or
            folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='modifyAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory with the ACL being modified.
            </param>
            <param name='aclspec'>
            The ACL specification included in ACL modification operations in
            the format '[default:]user|group|other::r|-w|-x|-'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclEntriesWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes existing Access Control List (ACL) entries for a file or
            folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='removeAclFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory with the ACL being removed.
            </param>
            <param name='aclspec'>
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveDefaultAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes the existing Default Access Control List (ACL) of the
            specified directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='defaultAclFilePath'>
            The Data Lake Store path (starting with '/') of the directory with
            the default ACL being removed.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RemoveAclWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes the existing Access Control List (ACL) of the specified
            file or directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory with the ACL being removed.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.GetAclStatusWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets Access Control List (ACL) entries for the specified file or
            directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='aclFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory for which to get the ACL.
            </param>
            <param name='tooId'>
            An optional switch to return friendly names in place of object ID
            for ACL entries. tooid=false returns friendly names instead of the
            AAD Object ID. Default value is true, returning AAD object IDs.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the requested file or directory, optionally recursively.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='filePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory to delete.
            </param>
            <param name='recursive'>
            The optional switch indicating if the delete should be recursive
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.RenameWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Rename a file or directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='renameFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory to move/rename.
            </param>
            <param name='destination'>
            The path to move/rename the file or folder to
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetOwnerWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the owner of a file or directory.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='setOwnerFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory for which to set the owner.
            </param>
            <param name='owner'>
            The AAD Object ID of the user owner of the file or directory. If
            empty, the property will remain unchanged.
            </param>
            <param name='group'>
            The AAD Object ID of the group owner of the file or directory. If
            empty, the property will remain unchanged.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFileSystemOperations.SetPermissionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the permission of the file or folder.
            </summary>
            <param name='accountName'>
            The Azure Data Lake Store account to execute filesystem operations
            on.
            </param>
            <param name='setPermissionFilePath'>
            The Data Lake Store path (starting with '/') of the file or
            directory for which to set the permission.
            </param>
            <param name='permission'>
            A string representation of the permission (i.e 'rwx'). If empty,
            this property remains unchanged.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations">
            <summary>
            FirewallRulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.#ctor(Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient)">
            <summary>
            Initializes a new instance of the FirewallRulesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.Client">
            <summary>
            Gets a reference to the DataLakeStoreAccountManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified firewall rule. During update, the firewall
            rule with the specified name will be replaced with this new firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to create or update.
            </param>
            <param name='parameters'>
            Parameters supplied to create or update the firewall rule.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the firewall rule.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified firewall rule from the specified Data Lake Store
            account
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to retrieve.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.ListByAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data Lake
            Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rules.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperations.ListByAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data Lake
            Store account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions">
            <summary>
            Extension methods for FirewallRulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule)">
            <summary>
            Creates or updates the specified firewall rule. During update, the firewall
            rule with the specified name will be replaced with this new firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to create or update.
            </param>
            <param name='parameters'>
            Parameters supplied to create or update the firewall rule.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified firewall rule. During update, the firewall
            rule with the specified name will be replaced with this new firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to create or update.
            </param>
            <param name='parameters'>
            Parameters supplied to create or update the firewall rule.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.Update(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters)">
            <summary>
            Updates the specified firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the firewall rule.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the specified firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the firewall rule.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the specified firewall rule from the specified Data Lake Store
            account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified firewall rule from the specified Data Lake Store
            account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.Get(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String)">
            <summary>
            Gets the specified Data Lake Store firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store firewall rule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to retrieve.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.ListByAccount(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data Lake
            Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rules.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.ListByAccountAsync(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data Lake
            Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the firewall
            rules.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.ListByAccountNext(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data Lake
            Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.FirewallRulesOperationsExtensions.ListByAccountNextAsync(Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data Lake
            Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient">
            <summary>
            Creates an Azure Data Lake Store account management client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.FirewallRules">
            <summary>
            Gets the IFirewallRulesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.TrustedIdProviders">
            <summary>
            Gets the ITrustedIdProvidersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreAccountManagementClient.Account">
            <summary>
            Gets the IAccountOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient">
            <summary>
            Creates an Azure Data Lake Store filesystem client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.SerializationSettings">
            <summary>
            The base URI of the service.
            </summary>
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.AdlsFileSystemDnsSuffix">
            <summary>
            Gets the URI used as the base for all cloud service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.IDataLakeStoreFileSystemManagementClient.FileSystem">
            <summary>
            Gets the IFileSystemOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations">
            <summary>
            FirewallRulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified firewall rule. During update, the
            firewall rule with the specified name will be replaced with this
            new firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the
            firewall rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to create or update.
            </param>
            <param name='parameters'>
            Parameters supplied to create or update the firewall rule.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the
            firewall rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to update.
            </param>
            <param name='parameters'>
            Parameters supplied to update the firewall rule.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified firewall rule from the specified Data Lake
            Store account
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the
            firewall rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store firewall rule.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the
            firewall rule.
            </param>
            <param name='firewallRuleName'>
            The name of the firewall rule to retrieve.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations.ListByAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data
            Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the
            firewall rules.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.IFirewallRulesOperations.ListByAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store firewall rules within the specified Data
            Lake Store account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations">
            <summary>
            TrustedIdProvidersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified trusted identity provider. During
            update, the trusted identity provider with the specified name will
            be replaced with this new provider
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the
            trusted identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for
            differentiation of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to create or replace the trusted identity
            provider.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified trusted identity provider.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the
            trusted identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for
            differentiation of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to update the trusted identity provider.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified trusted identity provider from the specified
            Data Lake Store account
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the
            trusted identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store trusted identity provider.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the
            trusted identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to retrieve.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations.ListByAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the
            specified Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake
            Store account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the
            trusted identity providers.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations.ListByAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the
            specified Data Lake Store account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus">
            <summary>
            Data Lake Store file or directory Access Control List information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor">
            <summary>
            Initializes a new instance of the AclStatus class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.#ctor(System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the AclStatus class.
            </summary>
            <param name="entries">the list of ACLSpec entries on a file or
            directory.</param>
            <param name="group">the group owner, an AAD Object ID.</param>
            <param name="owner">the user owner, an AAD Object ID.</param>
            <param name="permission">The octal representation of the unnamed
            user, mask and other permissions.</param>
            <param name="stickyBit">the indicator of whether the sticky bit is
            on or off.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Entries">
            <summary>
            Gets or sets the list of ACLSpec entries on a file or directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Group">
            <summary>
            Gets or sets the group owner, an AAD Object ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Owner">
            <summary>
            Gets or sets the user owner, an AAD Object ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.Permission">
            <summary>
            Gets or sets the octal representation of the unnamed user, mask and
            other permissions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatus.StickyBit">
            <summary>
            Gets the indicator of whether the sticky bit is on or off.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult">
            <summary>
            Data Lake Store file or directory Access Control List information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult.#ctor">
            <summary>
            Initializes a new instance of the AclStatusResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.AclStatus)">
            <summary>
            Initializes a new instance of the AclStatusResult class.
            </summary>
            <param name="aclStatus">the AclStatus object for a given file or
            directory.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AclStatusResult.AclStatus">
            <summary>
            Gets or sets the AclStatus object for a given file or directory.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsAccessControlException">
            <summary>
            A WebHDFS exception thrown indicating that access is denied due to
            insufficient permissions. Thrown when a 403 error response code is
            returned (forbidden).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsAccessControlException.#ctor">
            <summary>
            Initializes a new instance of the AdlsAccessControlException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsAccessControlException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsAccessControlException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsBadOffsetException">
            <summary>
            A WebHDFS exception thrown indicating the append or read is from a bad
            offset. Thrown when a 400 error response code is returned for append
            and open operations (Bad request).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsBadOffsetException.#ctor">
            <summary>
            Initializes a new instance of the AdlsBadOffsetException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsBadOffsetException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsBadOffsetException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsError">
            <summary>
            Data Lake Store filesystem error containing a specific WebHDFS
            exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsError.#ctor">
            <summary>
            Initializes a new instance of the AdlsError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsError.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.AdlsRemoteException)">
            <summary>
            Initializes a new instance of the AdlsError class.
            </summary>
            <param name="remoteException">the object representing the actual
            WebHDFS exception being returned.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AdlsError.RemoteException">
            <summary>
            Gets the object representing the actual WebHDFS exception being
            returned.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException">
            <summary>
            Exception thrown for an invalid response with AdlsError information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException.#ctor">
            <summary>
            Initializes a new instance of the AdlsErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AdlsErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the AdlsErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsFileAlreadyExistsException">
            <summary>
            A WebHDFS exception thrown indicating the file or folder already
            exists. Thrown when a 403 error response code is returned (forbidden).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsFileAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the AdlsFileAlreadyExistsException
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsFileAlreadyExistsException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsFileAlreadyExistsException
            class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsFileNotFoundException">
            <summary>
            A WebHDFS exception thrown indicating the file or folder could not be
            found. Thrown when a 404 error response code is returned (not found).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsFileNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the AdlsFileNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsFileNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsFileNotFoundException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsIllegalArgumentException">
            <summary>
            A WebHDFS exception thrown indicating that one more arguments is
            incorrect. Thrown when a 400 error response code is returned (bad
            request).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsIllegalArgumentException.#ctor">
            <summary>
            Initializes a new instance of the AdlsIllegalArgumentException
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsIllegalArgumentException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsIllegalArgumentException
            class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsIOException">
            <summary>
            A WebHDFS exception thrown indicating there was an IO (read or write)
            error. Thrown when a 403 error response code is returned (forbidden).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsIOException.#ctor">
            <summary>
            Initializes a new instance of the AdlsIOException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsIOException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsIOException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRemoteException">
            <summary>
            Data Lake Store filesystem exception based on the WebHDFS definition
            for RemoteExceptions. This is a WebHDFS 'catch all' exception
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRemoteException.#ctor">
            <summary>
            Initializes a new instance of the AdlsRemoteException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRemoteException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsRemoteException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRemoteException.JavaClassName">
            <summary>
            Gets the full class package name for the exception thrown, such as
            'java.lang.IllegalArgumentException'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRemoteException.Message">
            <summary>
            Gets the message associated with the exception that was thrown,
            such as 'Invalid value for webhdfs parameter "permission":...'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRuntimeException">
            <summary>
            A WebHDFS exception thrown when an unexpected error occurs during an
            operation. Thrown when a 500 error response code is returned (Internal
            server error).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the AdlsRuntimeException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsRuntimeException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsRuntimeException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsSecurityException">
            <summary>
            A WebHDFS exception thrown indicating that access is denied. Thrown
            when a 401 error response code is returned (Unauthorized).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsSecurityException.#ctor">
            <summary>
            Initializes a new instance of the AdlsSecurityException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsSecurityException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsSecurityException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsThrottledException">
            <summary>
            A WebHDFS exception thrown indicating that the request is being
            throttled. Reducing the number of requests or request size helps to
            mitigate this error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsThrottledException.#ctor">
            <summary>
            Initializes a new instance of the AdlsThrottledException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsThrottledException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsThrottledException class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AdlsUnsupportedOperationException">
            <summary>
            A WebHDFS exception thrown indicating that the requested operation is
            not supported. Thrown when a 400 error response code is returned (bad
            request).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsUnsupportedOperationException.#ctor">
            <summary>
            Initializes a new instance of the AdlsUnsupportedOperationException
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.AdlsUnsupportedOperationException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AdlsUnsupportedOperationException
            class.
            </summary>
            <param name="javaClassName">the full class package name for the
            exception thrown, such as
            'java.lang.IllegalArgumentException'.</param>
            <param name="message">the message associated with the exception
            that was thrown, such as 'Invalid value for webhdfs parameter
            "permission":...'.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.AppendModeType">
            <summary>
            Defines values for AppendModeType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary">
            <summary>
            Data Lake Store content summary information
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary.#ctor">
            <summary>
            Initializes a new instance of the ContentSummary class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the ContentSummary class.
            </summary>
            <param name="directoryCount">the number of directories.</param>
            <param name="fileCount">the number of files.</param>
            <param name="length">the number of bytes used by the
            content.</param>
            <param name="spaceConsumed">the disk space consumed by the
            content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary.DirectoryCount">
            <summary>
            Gets the number of directories.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary.FileCount">
            <summary>
            Gets the number of files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary.Length">
            <summary>
            Gets the number of bytes used by the content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary.SpaceConsumed">
            <summary>
            Gets the disk space consumed by the content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult">
            <summary>
            Data Lake Store filesystem content summary information response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult.#ctor">
            <summary>
            Initializes a new instance of the ContentSummaryResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.ContentSummary)">
            <summary>
            Initializes a new instance of the ContentSummaryResult class.
            </summary>
            <param name="contentSummary">the content summary for the specified
            path</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ContentSummaryResult.ContentSummary">
            <summary>
            Gets the content summary for the specified path
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount">
            <summary>
            Data Lake Store account information
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.#ctor">
            <summary>
            Initializes a new instance of the DataLakeStoreAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountStatus},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionState},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.EncryptionProvisioningState},Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.FirewallState},System.Collections.Generic.IList{Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProviderState},System.Collections.Generic.IList{Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.TierType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.TierType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.FirewallAllowAzureIpsState})">
            <summary>
            Initializes a new instance of the DataLakeStoreAccount class.
            </summary>
            <param name="location">Resource location</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="tags">Resource tags</param>
            <param name="identity">The Key Vault encryption identity, if
            any.</param>
            <param name="provisioningState">the status of the Data Lake Store
            account while being provisioned. Possible values include: 'Failed',
            'Creating', 'Running', 'Succeeded', 'Patching', 'Suspending',
            'Resuming', 'Deleting', 'Deleted'</param>
            <param name="state">the status of the Data Lake Store account after
            provisioning has completed. Possible values include: 'Active',
            'Suspended'</param>
            <param name="creationTime">the account creation time.</param>
            <param name="encryptionState">The current state of encryption for
            this Data Lake store account. Possible values include: 'Enabled',
            'Disabled'</param>
            <param name="encryptionProvisioningState">The current state of
            encryption provisioning for this Data Lake store account. Possible
            values include: 'Creating', 'Succeeded'</param>
            <param name="encryptionConfig">The Key Vault encryption
            configuration.</param>
            <param name="firewallState">The current state of the IP address
            firewall for this Data Lake store account. Possible values include:
            'Enabled', 'Disabled'</param>
            <param name="firewallRules">The list of firewall rules associated
            with this Data Lake store account.</param>
            <param name="trustedIdProviderState">The current state of the
            trusted identity provider feature for this Data Lake store account.
            Possible values include: 'Enabled', 'Disabled'</param>
            <param name="trustedIdProviders">The list of trusted identity
            providers associated with this Data Lake store account.</param>
            <param name="lastModifiedTime">the account last modified
            time.</param>
            <param name="endpoint">the gateway host.</param>
            <param name="defaultGroup">the default owner group for all new
            folders and files created in the Data Lake Store account.</param>
            <param name="newTier">the commitment tier to use for next month.
            Possible values include: 'Consumption', 'Commitment_1TB',
            'Commitment_10TB', 'Commitment_100TB', 'Commitment_500TB',
            'Commitment_1PB', 'Commitment_5PB'</param>
            <param name="currentTier">the commitment tier in use for the
            current month. Possible values include: 'Consumption',
            'Commitment_1TB', 'Commitment_10TB', 'Commitment_100TB',
            'Commitment_500TB', 'Commitment_1PB', 'Commitment_5PB'</param>
            <param name="firewallAllowAzureIps">The current state of allowing
            or disallowing IPs originating within Azure through the firewall.
            If the firewall is disabled, this is not enforced. Possible values
            include: 'Enabled', 'Disabled'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.Identity">
            <summary>
            Gets or sets the Key Vault encryption identity, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.ProvisioningState">
            <summary>
            Gets the status of the Data Lake Store account while being
            provisioned. Possible values include: 'Failed', 'Creating',
            'Running', 'Succeeded', 'Patching', 'Suspending', 'Resuming',
            'Deleting', 'Deleted'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.State">
            <summary>
            Gets the status of the Data Lake Store account after provisioning
            has completed. Possible values include: 'Active', 'Suspended'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.CreationTime">
            <summary>
            Gets the account creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.EncryptionState">
            <summary>
            Gets or sets the current state of encryption for this Data Lake
            store account. Possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.EncryptionProvisioningState">
            <summary>
            Gets the current state of encryption provisioning for this Data
            Lake store account. Possible values include: 'Creating',
            'Succeeded'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.EncryptionConfig">
            <summary>
            Gets or sets the Key Vault encryption configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.FirewallState">
            <summary>
            Gets or sets the current state of the IP address firewall for this
            Data Lake store account. Possible values include: 'Enabled',
            'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.FirewallRules">
            <summary>
            Gets or sets the list of firewall rules associated with this Data
            Lake store account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.TrustedIdProviderState">
            <summary>
            Gets or sets the current state of the trusted identity provider
            feature for this Data Lake store account. Possible values include:
            'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.TrustedIdProviders">
            <summary>
            Gets or sets the list of trusted identity providers associated with
            this Data Lake store account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.LastModifiedTime">
            <summary>
            Gets the account last modified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.Endpoint">
            <summary>
            Gets the gateway host.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.DefaultGroup">
            <summary>
            Gets or sets the default owner group for all new folders and files
            created in the Data Lake Store account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.NewTier">
            <summary>
            Gets or sets the commitment tier to use for next month. Possible
            values include: 'Consumption', 'Commitment_1TB', 'Commitment_10TB',
            'Commitment_100TB', 'Commitment_500TB', 'Commitment_1PB',
            'Commitment_5PB'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.CurrentTier">
            <summary>
            Gets the commitment tier in use for the current month. Possible
            values include: 'Consumption', 'Commitment_1TB', 'Commitment_10TB',
            'Commitment_100TB', 'Commitment_500TB', 'Commitment_1PB',
            'Commitment_5PB'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.FirewallAllowAzureIps">
            <summary>
            Gets or sets the current state of allowing or disallowing IPs
            originating within Azure through the firewall. If the firewall is
            disabled, this is not enforced. Possible values include: 'Enabled',
            'Disabled'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccount.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountState">
            <summary>
            Defines values for DataLakeStoreAccountState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountStatus">
            <summary>
            Defines values for DataLakeStoreAccountStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters">
            <summary>
            Data Lake Store account information to update
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the
            DataLakeStoreAccountUpdateParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.FirewallState},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProviderState},System.String,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.TierType},System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.FirewallAllowAzureIpsState},Microsoft.Azure.Management.DataLake.Store.Models.UpdateEncryptionConfig)">
            <summary>
            Initializes a new instance of the
            DataLakeStoreAccountUpdateParameters class.
            </summary>
            <param name="tags">Resource tags</param>
            <param name="firewallState">The current state of the IP address
            firewall for this Data Lake store account. Disabling the firewall
            does not remove existing rules, they will just be ignored until the
            firewall is re-enabled. Possible values include: 'Enabled',
            'Disabled'</param>
            <param name="trustedIdProviderState">The current state of the
            trusted identity provider feature for this Data Lake store account.
            Disabling trusted identity provider functionality does not remove
            the providers, they will just be ignored until this feature is
            re-enabled. Possible values include: 'Enabled', 'Disabled'</param>
            <param name="defaultGroup">the default owner group for all new
            folders and files created in the Data Lake Store account.</param>
            <param name="newTier">the commitment tier to use for next month.
            Possible values include: 'Consumption', 'Commitment_1TB',
            'Commitment_10TB', 'Commitment_100TB', 'Commitment_500TB',
            'Commitment_1PB', 'Commitment_5PB'</param>
            <param name="firewallAllowAzureIps">The current state of allowing
            or disallowing IPs originating within Azure through the firewall.
            If the firewall is disabled, this is not enforced. Possible values
            include: 'Enabled', 'Disabled'</param>
            <param name="encryptionConfig">Used for rotation of user managed
            Key Vault keys. Can only be used to rotate a user managed
            encryption Key Vault key.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.Tags">
            <summary>
            Gets or sets resource tags
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.FirewallState">
            <summary>
            Gets or sets the current state of the IP address firewall for this
            Data Lake store account. Disabling the firewall does not remove
            existing rules, they will just be ignored until the firewall is
            re-enabled. Possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.TrustedIdProviderState">
            <summary>
            Gets or sets the current state of the trusted identity provider
            feature for this Data Lake store account. Disabling trusted
            identity provider functionality does not remove the providers, they
            will just be ignored until this feature is re-enabled. Possible
            values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.DefaultGroup">
            <summary>
            Gets or sets the default owner group for all new folders and files
            created in the Data Lake Store account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.NewTier">
            <summary>
            Gets or sets the commitment tier to use for next month. Possible
            values include: 'Consumption', 'Commitment_1TB', 'Commitment_10TB',
            'Commitment_100TB', 'Commitment_500TB', 'Commitment_1PB',
            'Commitment_5PB'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.FirewallAllowAzureIps">
            <summary>
            Gets or sets the current state of allowing or disallowing IPs
            originating within Azure through the firewall. If the firewall is
            disabled, this is not enforced. Possible values include: 'Enabled',
            'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.DataLakeStoreAccountUpdateParameters.EncryptionConfig">
            <summary>
            Gets or sets used for rotation of user managed Key Vault keys. Can
            only be used to rotate a user managed encryption Key Vault key.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig">
            <summary>
            The encryption configuration for the account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor">
            <summary>
            Initializes a new instance of the EncryptionConfig class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType,Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo)">
            <summary>
            Initializes a new instance of the EncryptionConfig class.
            </summary>
            <param name="type">The type of encryption configuration being used.
            Currently the only supported types are 'UserManaged' and
            'ServiceManaged'. Possible values include: 'UserManaged',
            'ServiceManaged'</param>
            <param name="keyVaultMetaInfo">The Key Vault information for
            connecting to user managed encryption keys.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.Type">
            <summary>
            Gets or sets the type of encryption configuration being used.
            Currently the only supported types are 'UserManaged' and
            'ServiceManaged'. Possible values include: 'UserManaged',
            'ServiceManaged'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.KeyVaultMetaInfo">
            <summary>
            Gets or sets the Key Vault information for connecting to user
            managed encryption keys.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfig.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionConfigType">
            <summary>
            Defines values for EncryptionConfigType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity">
            <summary>
            The encryption identity properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor">
            <summary>
            Initializes a new instance of the EncryptionIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#ctor(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the EncryptionIdentity class.
            </summary>
            <param name="principalId">The principal identifier associated with
            the encryption.</param>
            <param name="tenantId">The tenant identifier associated with the
            encryption.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.#cctor">
            <summary>
            Static constructor for EncryptionIdentity class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.PrincipalId">
            <summary>
            Gets the principal identifier associated with the encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.TenantId">
            <summary>
            Gets the tenant identifier associated with the encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionIdentity.Type">
            <summary>
            The type of encryption being used. Currently the only supported
            type is 'SystemAssigned'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionProvisioningState">
            <summary>
            Defines values for EncryptionProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.EncryptionState">
            <summary>
            Defines values for EncryptionState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.ErrorDetails">
            <summary>
            Data Lake Store error details information
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.ErrorDetails.#ctor">
            <summary>
            Initializes a new instance of the ErrorDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.ErrorDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ErrorDetails class.
            </summary>
            <param name="code">the HTTP status code or error code associated
            with this error</param>
            <param name="message">the error message localized based on
            Accept-Language</param>
            <param name="target">the target of the particular error (for
            example, the name of the property in error).</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ErrorDetails.Code">
            <summary>
            Gets the HTTP status code or error code associated with this error
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ErrorDetails.Message">
            <summary>
            Gets the error message localized based on Accept-Language
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.ErrorDetails.Target">
            <summary>
            Gets the target of the particular error (for example, the name of
            the property in error).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.ExpiryOptionType">
            <summary>
            Defines values for ExpiryOptionType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult">
            <summary>
            The result of the request or operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult.#ctor">
            <summary>
            Initializes a new instance of the FileOperationResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the FileOperationResult class.
            </summary>
            <param name="operationResult">the result of the operation or
            request.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileOperationResult.OperationResult">
            <summary>
            Gets the result of the operation or request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FileStatuses">
            <summary>
            Data Lake Store file status list information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatuses.#ctor">
            <summary>
            Initializes a new instance of the FileStatuses class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatuses.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties})">
            <summary>
            Initializes a new instance of the FileStatuses class.
            </summary>
            <param name="fileStatus">the object containing the list of
            properties of the files.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatuses.FileStatus">
            <summary>
            Gets the object containing the list of properties of the files.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult">
            <summary>
            Data Lake Store filesystem file status list information response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult.#ctor">
            <summary>
            Initializes a new instance of the FileStatusesResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.FileStatuses)">
            <summary>
            Initializes a new instance of the FileStatusesResult class.
            </summary>
            <param name="fileStatuses">the object representing the list of file
            statuses.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusesResult.FileStatuses">
            <summary>
            Gets the object representing the list of file statuses.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties">
            <summary>
            Data Lake Store file or directory information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.#ctor">
            <summary>
            Initializes a new instance of the FileStatusProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.DataLake.Store.Models.FileType},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the FileStatusProperties class.
            </summary>
            <param name="accessTime">the last access time as ticks since the
            epoch.</param>
            <param name="blockSize">the block size for the file.</param>
            <param name="childrenNum">the number of children in the
            directory.</param>
            <param name="expirationTime">Gets the expiration time, if any, as
            ticks since the epoch. If the value is 0 or DateTime.MaxValue there
            is no expiration.</param>
            <param name="group">the group owner.</param>
            <param name="length">the number of bytes in a file.</param>
            <param name="modificationTime">the modification time as ticks since
            the epoch.</param>
            <param name="owner">the user who is the owner.</param>
            <param name="pathSuffix">the path suffix.</param>
            <param name="permission">the permission represented as an
            string.</param>
            <param name="type">the type of the path object. Possible values
            include: 'FILE', 'DIRECTORY'</param>
            <param name="aclBit">flag to indicate if extended acls are enabled
            </param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.AccessTime">
            <summary>
            Gets the last access time as ticks since the epoch.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.BlockSize">
            <summary>
            Gets the block size for the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.ChildrenNum">
            <summary>
            Gets the number of children in the directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.ExpirationTime">
            <summary>
            Gets the expiration time, if any, as ticks since the epoch. If the
            value is 0 or DateTime.MaxValue there is no expiration.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.Group">
            <summary>
            Gets the group owner.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.Length">
            <summary>
            Gets the number of bytes in a file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.ModificationTime">
            <summary>
            Gets the modification time as ticks since the epoch.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.Owner">
            <summary>
            Gets the user who is the owner.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.PathSuffix">
            <summary>
            Gets the path suffix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.Permission">
            <summary>
            Gets the permission represented as an string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.Type">
            <summary>
            Gets the type of the path object. Possible values include: 'FILE',
            'DIRECTORY'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties.AclBit">
            <summary>
            Gets flag to indicate if extended acls are enabled
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult">
            <summary>
            Data Lake Store filesystem file status information response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult.#ctor">
            <summary>
            Initializes a new instance of the FileStatusResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.FileStatusProperties)">
            <summary>
            Initializes a new instance of the FileStatusResult class.
            </summary>
            <param name="fileStatus">the file status object associated with the
            specified path.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FileStatusResult.FileStatus">
            <summary>
            Gets the file status object associated with the specified path.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FileType">
            <summary>
            Defines values for FileType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FirewallAllowAzureIpsState">
            <summary>
            Defines values for FirewallAllowAzureIpsState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule">
            <summary>
            Data Lake Store firewall rule information
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule.#ctor">
            <summary>
            Initializes a new instance of the FirewallRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the FirewallRule class.
            </summary>
            <param name="startIpAddress">the start IP address for the firewall
            rule. This can be either ipv4 or ipv6. Start and End should be in
            the same protocol.</param>
            <param name="endIpAddress">the end IP address for the firewall
            rule. This can be either ipv4 or ipv6. Start and End should be in
            the same protocol.</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule.StartIpAddress">
            <summary>
            Gets or sets the start IP address for the firewall rule. This can
            be either ipv4 or ipv6. Start and End should be in the same
            protocol.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule.EndIpAddress">
            <summary>
            Gets or sets the end IP address for the firewall rule. This can be
            either ipv4 or ipv6. Start and End should be in the same protocol.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.FirewallRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.FirewallState">
            <summary>
            Defines values for FirewallState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo">
            <summary>
            Metadata information used by account encryption.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultMetaInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyVaultMetaInfo class.
            </summary>
            <param name="keyVaultResourceId">The resource identifier for the
            user managed Key Vault being used to encrypt.</param>
            <param name="encryptionKeyName">The name of the user managed
            encryption key.</param>
            <param name="encryptionKeyVersion">The version of the user managed
            encryption key.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.KeyVaultResourceId">
            <summary>
            Gets or sets the resource identifier for the user managed Key Vault
            being used to encrypt.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyName">
            <summary>
            Gets or sets the name of the user managed encryption key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.EncryptionKeyVersion">
            <summary>
            Gets or sets the version of the user managed encryption key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.KeyVaultMetaInfo.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.Resource">
            <summary>
            The Resource model definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.Resource.#ctor">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.Resource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
            <param name="location">Resource location</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="tags">Resource tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.Resource.Id">
            <summary>
            Gets resource Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.Resource.Name">
            <summary>
            Gets resource name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.Resource.Type">
            <summary>
            Gets resource type
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.Resource.Location">
            <summary>
            Gets or sets resource location
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.Resource.Tags">
            <summary>
            Gets or sets resource tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.Resource.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.SubResource">
            <summary>
            The Resource model definition for a nested resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.SubResource.#ctor">
            <summary>
            Initializes a new instance of the SubResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.SubResource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the SubResource class.
            </summary>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.SubResource.Id">
            <summary>
            Gets resource Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.SubResource.Name">
            <summary>
            Gets or sets resource name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.SubResource.Type">
            <summary>
            Gets resource type
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.SyncFlag">
            <summary>
            Defines values for SyncFlag.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.TierType">
            <summary>
            Defines values for TierType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider">
            <summary>
            Data Lake Store Trusted Identity Provider information
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider.#ctor">
            <summary>
            Initializes a new instance of the TrustedIdProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TrustedIdProvider class.
            </summary>
            <param name="idProvider">The URL of this trusted identity
            provider</param>
            <param name="id">Resource Id</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider.IdProvider">
            <summary>
            Gets or sets the URL of this trusted identity provider
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProviderState">
            <summary>
            Defines values for TrustedIdProviderState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.UpdateEncryptionConfig">
            <summary>
            The encryption configuration used to update a user managed Key Vault
            key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateEncryptionConfig.#ctor">
            <summary>
            Initializes a new instance of the UpdateEncryptionConfig class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateEncryptionConfig.#ctor(Microsoft.Azure.Management.DataLake.Store.Models.UpdateKeyVaultMetaInfo)">
            <summary>
            Initializes a new instance of the UpdateEncryptionConfig class.
            </summary>
            <param name="keyVaultMetaInfo">The updated Key Vault key to use in
            user managed key rotation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.UpdateEncryptionConfig.KeyVaultMetaInfo">
            <summary>
            Gets or sets the updated Key Vault key to use in user managed key
            rotation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters">
            <summary>
            Data Lake Analytics firewall rule update parameters
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters.#ctor">
            <summary>
            Initializes a new instance of the UpdateFirewallRuleParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UpdateFirewallRuleParameters
            class.
            </summary>
            <param name="startIpAddress">the start IP address for the firewall
            rule. This can be either ipv4 or ipv6. Start and End should be in
            the same protocol.</param>
            <param name="endIpAddress">the end IP address for the firewall
            rule. This can be either ipv4 or ipv6. Start and End should be in
            the same protocol.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters.StartIpAddress">
            <summary>
            Gets or sets the start IP address for the firewall rule. This can
            be either ipv4 or ipv6. Start and End should be in the same
            protocol.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.UpdateFirewallRuleParameters.EndIpAddress">
            <summary>
            Gets or sets the end IP address for the firewall rule. This can be
            either ipv4 or ipv6. Start and End should be in the same protocol.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.UpdateKeyVaultMetaInfo">
            <summary>
            The Key Vault update information used for user managed key rotation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateKeyVaultMetaInfo.#ctor">
            <summary>
            Initializes a new instance of the UpdateKeyVaultMetaInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateKeyVaultMetaInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UpdateKeyVaultMetaInfo class.
            </summary>
            <param name="encryptionKeyVersion">The version of the user managed
            encryption key to update through a key rotation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.UpdateKeyVaultMetaInfo.EncryptionKeyVersion">
            <summary>
            Gets or sets the version of the user managed encryption key to
            update through a key rotation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters">
            <summary>
            Data Lake Store Trusted Identity Provider update parameters
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters.#ctor">
            <summary>
            Initializes a new instance of the UpdateTrustedIdProviderParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UpdateTrustedIdProviderParameters
            class.
            </summary>
            <param name="idProvider">The URL of this trusted identity
            provider</param>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters.IdProvider">
            <summary>
            Gets or sets the URL of this trusted identity provider
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations">
            <summary>
            TrustedIdProvidersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.#ctor(Microsoft.Azure.Management.DataLake.Store.DataLakeStoreAccountManagementClient)">
            <summary>
            Initializes a new instance of the TrustedIdProvidersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.Client">
            <summary>
            Gets a reference to the DataLakeStoreAccountManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified trusted identity provider. During update,
            the trusted identity provider with the specified name will be replaced with
            this new provider
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for differentiation
            of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to create or replace the trusted identity provider.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the specified trusted identity provider.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for differentiation
            of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to update the trusted identity provider.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified trusted identity provider from the specified Data
            Lake Store account
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store trusted identity provider.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to retrieve.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.ListByAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the specified
            Data Lake Store account.
            </summary>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the trusted
            identity providers.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperations.ListByAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the specified
            Data Lake Store account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions">
            <summary>
            Extension methods for TrustedIdProvidersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider)">
            <summary>
            Creates or updates the specified trusted identity provider. During update,
            the trusted identity provider with the specified name will be replaced with
            this new provider
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for differentiation
            of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to create or replace the trusted identity provider.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.TrustedIdProvider,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the specified trusted identity provider. During update,
            the trusted identity provider with the specified name will be replaced with
            this new provider
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to add or replace the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for differentiation
            of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to create or replace the trusted identity provider.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.Update(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters)">
            <summary>
            Updates the specified trusted identity provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for differentiation
            of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to update the trusted identity provider.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.DataLake.Store.Models.UpdateTrustedIdProviderParameters,System.Threading.CancellationToken)">
            <summary>
            Updates the specified trusted identity provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account to which to update the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider. This is used for differentiation
            of providers in the account.
            </param>
            <param name='parameters'>
            Parameters supplied to update the trusted identity provider.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.Delete(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the specified trusted identity provider from the specified Data
            Lake Store account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified trusted identity provider from the specified Data
            Lake Store account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to delete the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.Get(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String)">
            <summary>
            Gets the specified Data Lake Store trusted identity provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to retrieve.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.GetAsync(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified Data Lake Store trusted identity provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the trusted
            identity provider.
            </param>
            <param name='trustedIdProviderName'>
            The name of the trusted identity provider to retrieve.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.ListByAccount(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the specified
            Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the trusted
            identity providers.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.ListByAccountAsync(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the specified
            Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the Azure resource group that contains the Data Lake Store
            account.
            </param>
            <param name='accountName'>
            The name of the Data Lake Store account from which to get the trusted
            identity providers.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.ListByAccountNext(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the specified
            Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.DataLake.Store.TrustedIdProvidersOperationsExtensions.ListByAccountNextAsync(Microsoft.Azure.Management.DataLake.Store.ITrustedIdProvidersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists the Data Lake Store trusted identity providers within the specified
            Data Lake Store account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
